diff -Naur libnids-1.21/aclocal.m4.rej libnids-1.21_patched/aclocal.m4.rej
--- libnids-1.21/aclocal.m4.rej	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/aclocal.m4.rej	2010-03-27 20:18:40.865693639 +0100
@@ -0,0 +1,966 @@
+***************
+*** 0 ****
+--- 1,963 ----
++ dnl aclocal.m4 generated automatically by aclocal 1.4-p6
++ 
++ dnl Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
++ dnl This file is free software; the Free Software Foundation
++ dnl gives unlimited permission to copy and/or distribute it,
++ dnl with or without modifications, as long as this notice is preserved.
++ 
++ dnl This program is distributed in the hope that it will be useful,
++ dnl but WITHOUT ANY WARRANTY, to the extent permitted by law; without
++ dnl even the implied warranty of MERCHANTABILITY or FITNESS FOR A
++ dnl PARTICULAR PURPOSE.
++ 
++ # lib-prefix.m4 serial 4 (gettext-0.14.2)
++ dnl Copyright (C) 2001-2005 Free Software Foundation, Inc.
++ dnl This file is free software; the Free Software Foundation
++ dnl gives unlimited permission to copy and/or distribute it,
++ dnl with or without modifications, as long as this notice is preserved.
++ 
++ dnl From Bruno Haible.
++ 
++ dnl AC_LIB_ARG_WITH is synonymous to AC_ARG_WITH in autoconf-2.13, and
++ dnl similar to AC_ARG_WITH in autoconf 2.52...2.57 except that is doesn't
++ dnl require excessive bracketing.
++ ifdef([AC_HELP_STRING],
++ [AC_DEFUN([AC_LIB_ARG_WITH], [AC_ARG_WITH([$1],[[$2]],[$3],[$4])])],
++ [AC_DEFUN([AC_][LIB_ARG_WITH], [AC_ARG_WITH([$1],[$2],[$3],[$4])])])
++ 
++ dnl AC_LIB_PREFIX adds to the CPPFLAGS and LDFLAGS the flags that are needed
++ dnl to access previously installed libraries. The basic assumption is that
++ dnl a user will want packages to use other packages he previously installed
++ dnl with the same --prefix option.
++ dnl This macro is not needed if only AC_LIB_LINKFLAGS is used to locate
++ dnl libraries, but is otherwise very convenient.
++ AC_DEFUN([AC_LIB_PREFIX],
++ [
++   AC_BEFORE([$0], [AC_LIB_LINKFLAGS])
++   AC_REQUIRE([AC_PROG_CC])
++   AC_REQUIRE([AC_CANONICAL_HOST])
++   AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
++   dnl By default, look in $includedir and $libdir.
++   use_additional=yes
++   AC_LIB_WITH_FINAL_PREFIX([
++     eval additional_includedir=\"$includedir\"
++     eval additional_libdir=\"$libdir\"
++   ])
++   AC_LIB_ARG_WITH([lib-prefix],
++ [  --with-lib-prefix[=DIR] search for libraries in DIR/include and DIR/lib
++   --without-lib-prefix    don't search for libraries in includedir and libdir],
++ [
++     if test "X$withval" = "Xno"; then
++       use_additional=no
++     else
++       if test "X$withval" = "X"; then
++         AC_LIB_WITH_FINAL_PREFIX([
++           eval additional_includedir=\"$includedir\"
++           eval additional_libdir=\"$libdir\"
++         ])
++       else
++         additional_includedir="$withval/include"
++         additional_libdir="$withval/lib"
++       fi
++     fi
++ ])
++   if test $use_additional = yes; then
++     dnl Potentially add $additional_includedir to $CPPFLAGS.
++     dnl But don't add it
++     dnl   1. if it's the standard /usr/include,
++     dnl   2. if it's already present in $CPPFLAGS,
++     dnl   3. if it's /usr/local/include and we are using GCC on Linux,
++     dnl   4. if it doesn't exist as a directory.
++     if test "X$additional_includedir" != "X/usr/include"; then
++       haveit=
++       for x in $CPPFLAGS; do
++         AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++         if test "X$x" = "X-I$additional_includedir"; then
++           haveit=yes
++           break
++         fi
++       done
++       if test -z "$haveit"; then
++         if test "X$additional_includedir" = "X/usr/local/include"; then
++           if test -n "$GCC"; then
++             case $host_os in
++               linux* | gnu* | k*bsd*-gnu) haveit=yes;;
++             esac
++           fi
++         fi
++         if test -z "$haveit"; then
++           if test -d "$additional_includedir"; then
++             dnl Really add $additional_includedir to $CPPFLAGS.
++             CPPFLAGS="${CPPFLAGS}${CPPFLAGS:+ }-I$additional_includedir"
++           fi
++         fi
++       fi
++     fi
++     dnl Potentially add $additional_libdir to $LDFLAGS.
++     dnl But don't add it
++     dnl   1. if it's the standard /usr/lib,
++     dnl   2. if it's already present in $LDFLAGS,
++     dnl   3. if it's /usr/local/lib and we are using GCC on Linux,
++     dnl   4. if it doesn't exist as a directory.
++     if test "X$additional_libdir" != "X/usr/lib"; then
++       haveit=
++       for x in $LDFLAGS; do
++         AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++         if test "X$x" = "X-L$additional_libdir"; then
++           haveit=yes
++           break
++         fi
++       done
++       if test -z "$haveit"; then
++         if test "X$additional_libdir" = "X/usr/local/lib"; then
++           if test -n "$GCC"; then
++             case $host_os in
++               linux*) haveit=yes;;
++             esac
++           fi
++         fi
++         if test -z "$haveit"; then
++           if test -d "$additional_libdir"; then
++             dnl Really add $additional_libdir to $LDFLAGS.
++             LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-L$additional_libdir"
++           fi
++         fi
++       fi
++     fi
++   fi
++ ])
++ 
++ dnl AC_LIB_PREPARE_PREFIX creates variables acl_final_prefix,
++ dnl acl_final_exec_prefix, containing the values to which $prefix and
++ dnl $exec_prefix will expand at the end of the configure script.
++ AC_DEFUN([AC_LIB_PREPARE_PREFIX],
++ [
++   dnl Unfortunately, prefix and exec_prefix get only finally determined
++   dnl at the end of configure.
++   if test "X$prefix" = "XNONE"; then
++     acl_final_prefix="$ac_default_prefix"
++   else
++     acl_final_prefix="$prefix"
++   fi
++   if test "X$exec_prefix" = "XNONE"; then
++     acl_final_exec_prefix='${prefix}'
++   else
++     acl_final_exec_prefix="$exec_prefix"
++   fi
++   acl_save_prefix="$prefix"
++   prefix="$acl_final_prefix"
++   eval acl_final_exec_prefix=\"$acl_final_exec_prefix\"
++   prefix="$acl_save_prefix"
++ ])
++ 
++ dnl AC_LIB_WITH_FINAL_PREFIX([statement]) evaluates statement, with the
++ dnl variables prefix and exec_prefix bound to the values they will have
++ dnl at the end of the configure script.
++ AC_DEFUN([AC_LIB_WITH_FINAL_PREFIX],
++ [
++   acl_save_prefix="$prefix"
++   prefix="$acl_final_prefix"
++   acl_save_exec_prefix="$exec_prefix"
++   exec_prefix="$acl_final_exec_prefix"
++   $1
++   exec_prefix="$acl_save_exec_prefix"
++   prefix="$acl_save_prefix"
++ ])
++ 
++ # lib-link.m4 serial 6 (gettext-0.14.3)
++ dnl Copyright (C) 2001-2005 Free Software Foundation, Inc.
++ dnl This file is free software; the Free Software Foundation
++ dnl gives unlimited permission to copy and/or distribute it,
++ dnl with or without modifications, as long as this notice is preserved.
++ 
++ dnl From Bruno Haible.
++ 
++ AC_PREREQ(2.50)
++ 
++ dnl AC_LIB_LINKFLAGS(name [, dependencies]) searches for libname and
++ dnl the libraries corresponding to explicit and implicit dependencies.
++ dnl Sets and AC_SUBSTs the LIB${NAME} and LTLIB${NAME} variables and
++ dnl augments the CPPFLAGS variable.
++ AC_DEFUN([AC_LIB_LINKFLAGS],
++ [
++   AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
++   AC_REQUIRE([AC_LIB_RPATH])
++   define([Name],[translit([$1],[./-], [___])])
++   define([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],
++                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
++   AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [
++     AC_LIB_LINKFLAGS_BODY([$1], [$2])
++     ac_cv_lib[]Name[]_libs="$LIB[]NAME"
++     ac_cv_lib[]Name[]_ltlibs="$LTLIB[]NAME"
++     ac_cv_lib[]Name[]_cppflags="$INC[]NAME"
++   ])
++   LIB[]NAME="$ac_cv_lib[]Name[]_libs"
++   LTLIB[]NAME="$ac_cv_lib[]Name[]_ltlibs"
++   INC[]NAME="$ac_cv_lib[]Name[]_cppflags"
++   AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)
++   AC_SUBST([LIB]NAME)
++   AC_SUBST([LTLIB]NAME)
++   dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the
++   dnl results of this search when this library appears as a dependency.
++   HAVE_LIB[]NAME=yes
++   undefine([Name])
++   undefine([NAME])
++ ])
++ 
++ dnl AC_LIB_HAVE_LINKFLAGS(name, dependencies, includes, testcode)
++ dnl searches for libname and the libraries corresponding to explicit and
++ dnl implicit dependencies, together with the specified include files and
++ dnl the ability to compile and link the specified testcode. If found, it
++ dnl sets and AC_SUBSTs HAVE_LIB${NAME}=yes and the LIB${NAME} and
++ dnl LTLIB${NAME} variables and augments the CPPFLAGS variable, and
++ dnl #defines HAVE_LIB${NAME} to 1. Otherwise, it sets and AC_SUBSTs
++ dnl HAVE_LIB${NAME}=no and LIB${NAME} and LTLIB${NAME} to empty.
++ AC_DEFUN([AC_LIB_HAVE_LINKFLAGS],
++ [
++   AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
++   AC_REQUIRE([AC_LIB_RPATH])
++   define([Name],[translit([$1],[./-], [___])])
++   define([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],
++                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
++ 
++   dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME
++   dnl accordingly.
++   AC_LIB_LINKFLAGS_BODY([$1], [$2])
++ 
++   dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,
++   dnl because if the user has installed lib[]Name and not disabled its use
++   dnl via --without-lib[]Name-prefix, he wants to use it.
++   ac_save_CPPFLAGS="$CPPFLAGS"
++   AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)
++ 
++   AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [
++     ac_save_LIBS="$LIBS"
++     LIBS="$LIBS $LIB[]NAME"
++     AC_TRY_LINK([$3], [$4], [ac_cv_lib[]Name=yes], [ac_cv_lib[]Name=no])
++     LIBS="$ac_save_LIBS"
++   ])
++   if test "$ac_cv_lib[]Name" = yes; then
++     HAVE_LIB[]NAME=yes
++     AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the $1 library.])
++     AC_MSG_CHECKING([how to link with lib[]$1])
++     AC_MSG_RESULT([$LIB[]NAME])
++   else
++     HAVE_LIB[]NAME=no
++     dnl If $LIB[]NAME didn't lead to a usable library, we don't need
++     dnl $INC[]NAME either.
++     CPPFLAGS="$ac_save_CPPFLAGS"
++     LIB[]NAME=
++     LTLIB[]NAME=
++   fi
++   AC_SUBST([HAVE_LIB]NAME)
++   AC_SUBST([LIB]NAME)
++   AC_SUBST([LTLIB]NAME)
++   undefine([Name])
++   undefine([NAME])
++ ])
++ 
++ dnl Determine the platform dependent parameters needed to use rpath:
++ dnl libext, shlibext, hardcode_libdir_flag_spec, hardcode_libdir_separator,
++ dnl hardcode_direct, hardcode_minus_L.
++ AC_DEFUN([AC_LIB_RPATH],
++ [
++   dnl Tell automake >= 1.10 to complain if config.rpath is missing.
++   m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([config.rpath])])
++   AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS
++   AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld
++   AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host
++   AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir
++   AC_CACHE_CHECK([for shared library run path origin], acl_cv_rpath, [
++     CC="$CC" GCC="$GCC" LDFLAGS="$LDFLAGS" LD="$LD" with_gnu_ld="$with_gnu_ld" \
++     ${CONFIG_SHELL-/bin/sh} "$ac_aux_dir/config.rpath" "$host" > conftest.sh
++     . ./conftest.sh
++     rm -f ./conftest.sh
++     acl_cv_rpath=done
++   ])
++   wl="$acl_cv_wl"
++   libext="$acl_cv_libext"
++   shlibext="$acl_cv_shlibext"
++   hardcode_libdir_flag_spec="$acl_cv_hardcode_libdir_flag_spec"
++   hardcode_libdir_separator="$acl_cv_hardcode_libdir_separator"
++   hardcode_direct="$acl_cv_hardcode_direct"
++   hardcode_minus_L="$acl_cv_hardcode_minus_L"
++   dnl Determine whether the user wants rpath handling at all.
++   AC_ARG_ENABLE(rpath,
++     [  --disable-rpath         do not hardcode runtime library paths],
++     :, enable_rpath=yes)
++ ])
++ 
++ dnl AC_LIB_LINKFLAGS_BODY(name [, dependencies]) searches for libname and
++ dnl the libraries corresponding to explicit and implicit dependencies.
++ dnl Sets the LIB${NAME}, LTLIB${NAME} and INC${NAME} variables.
++ AC_DEFUN([AC_LIB_LINKFLAGS_BODY],
++ [
++   define([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],
++                                [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])
++   dnl By default, look in $includedir and $libdir.
++   use_additional=yes
++   AC_LIB_WITH_FINAL_PREFIX([
++     eval additional_includedir=\"$includedir\"
++     eval additional_libdir=\"$libdir\"
++   ])
++   AC_LIB_ARG_WITH([lib$1-prefix],
++ [  --with-lib$1-prefix[=DIR]  search for lib$1 in DIR/include and DIR/lib
++   --without-lib$1-prefix     don't search for lib$1 in includedir and libdir],
++ [
++     if test "X$withval" = "Xno"; then
++       use_additional=no
++     else
++       if test "X$withval" = "X"; then
++         AC_LIB_WITH_FINAL_PREFIX([
++           eval additional_includedir=\"$includedir\"
++           eval additional_libdir=\"$libdir\"
++         ])
++       else
++         additional_includedir="$withval/include"
++         additional_libdir="$withval/lib"
++       fi
++     fi
++ ])
++   dnl Search the library and its dependencies in $additional_libdir and
++   dnl $LDFLAGS. Using breadth-first-seach.
++   LIB[]NAME=
++   LTLIB[]NAME=
++   INC[]NAME=
++   rpathdirs=
++   ltrpathdirs=
++   names_already_handled=
++   names_next_round='$1 $2'
++   while test -n "$names_next_round"; do
++     names_this_round="$names_next_round"
++     names_next_round=
++     for name in $names_this_round; do
++       already_handled=
++       for n in $names_already_handled; do
++         if test "$n" = "$name"; then
++           already_handled=yes
++           break
++         fi
++       done
++       if test -z "$already_handled"; then
++         names_already_handled="$names_already_handled $name"
++         dnl See if it was already located by an earlier AC_LIB_LINKFLAGS
++         dnl or AC_LIB_HAVE_LINKFLAGS call.
++         uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./-|ABCDEFGHIJKLMNOPQRSTUVWXYZ___|'`
++         eval value=\"\$HAVE_LIB$uppername\"
++         if test -n "$value"; then
++           if test "$value" = yes; then
++             eval value=\"\$LIB$uppername\"
++             test -z "$value" || LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$value"
++             eval value=\"\$LTLIB$uppername\"
++             test -z "$value" || LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }$value"
++           else
++             dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined
++             dnl that this library doesn't exist. So just drop it.
++             :
++           fi
++         else
++           dnl Search the library lib$name in $additional_libdir and $LDFLAGS
++           dnl and the already constructed $LIBNAME/$LTLIBNAME.
++           found_dir=
++           found_la=
++           found_so=
++           found_a=
++           if test $use_additional = yes; then
++             if test -n "$shlibext" && test -f "$additional_libdir/lib$name.$shlibext"; then
++               found_dir="$additional_libdir"
++               found_so="$additional_libdir/lib$name.$shlibext"
++               if test -f "$additional_libdir/lib$name.la"; then
++                 found_la="$additional_libdir/lib$name.la"
++               fi
++             else
++               if test -f "$additional_libdir/lib$name.$libext"; then
++                 found_dir="$additional_libdir"
++                 found_a="$additional_libdir/lib$name.$libext"
++                 if test -f "$additional_libdir/lib$name.la"; then
++                   found_la="$additional_libdir/lib$name.la"
++                 fi
++               fi
++             fi
++           fi
++           if test "X$found_dir" = "X"; then
++             for x in $LDFLAGS $LTLIB[]NAME; do
++               AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++               case "$x" in
++                 -L*)
++                   dir=`echo "X$x" | sed -e 's/^X-L//'`
++                   if test -n "$shlibext" && test -f "$dir/lib$name.$shlibext"; then
++                     found_dir="$dir"
++                     found_so="$dir/lib$name.$shlibext"
++                     if test -f "$dir/lib$name.la"; then
++                       found_la="$dir/lib$name.la"
++                     fi
++                   else
++                     if test -f "$dir/lib$name.$libext"; then
++                       found_dir="$dir"
++                       found_a="$dir/lib$name.$libext"
++                       if test -f "$dir/lib$name.la"; then
++                         found_la="$dir/lib$name.la"
++                       fi
++                     fi
++                   fi
++                   ;;
++               esac
++               if test "X$found_dir" != "X"; then
++                 break
++               fi
++             done
++           fi
++           if test "X$found_dir" != "X"; then
++             dnl Found the library.
++             LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name"
++             if test "X$found_so" != "X"; then
++               dnl Linking with a shared library. We attempt to hardcode its
++               dnl directory into the executable's runpath, unless it's the
++               dnl standard /usr/lib.
++               if test "$enable_rpath" = no || test "X$found_dir" = "X/usr/lib"; then
++                 dnl No hardcoding is needed.
++                 LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
++               else
++                 dnl Use an explicit option to hardcode DIR into the resulting
++                 dnl binary.
++                 dnl Potentially add DIR to ltrpathdirs.
++                 dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.
++                 haveit=
++                 for x in $ltrpathdirs; do
++                   if test "X$x" = "X$found_dir"; then
++                     haveit=yes
++                     break
++                   fi
++                 done
++                 if test -z "$haveit"; then
++                   ltrpathdirs="$ltrpathdirs $found_dir"
++                 fi
++                 dnl The hardcoding into $LIBNAME is system dependent.
++                 if test "$hardcode_direct" = yes; then
++                   dnl Using DIR/libNAME.so during linking hardcodes DIR into the
++                   dnl resulting binary.
++                   LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
++                 else
++                   if test -n "$hardcode_libdir_flag_spec" && test "$hardcode_minus_L" = no; then
++                     dnl Use an explicit option to hardcode DIR into the resulting
++                     dnl binary.
++                     LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
++                     dnl Potentially add DIR to rpathdirs.
++                     dnl The rpathdirs will be appended to $LIBNAME at the end.
++                     haveit=
++                     for x in $rpathdirs; do
++                       if test "X$x" = "X$found_dir"; then
++                         haveit=yes
++                         break
++                       fi
++                     done
++                     if test -z "$haveit"; then
++                       rpathdirs="$rpathdirs $found_dir"
++                     fi
++                   else
++                     dnl Rely on "-L$found_dir".
++                     dnl But don't add it if it's already contained in the LDFLAGS
++                     dnl or the already constructed $LIBNAME
++                     haveit=
++                     for x in $LDFLAGS $LIB[]NAME; do
++                       AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++                       if test "X$x" = "X-L$found_dir"; then
++                         haveit=yes
++                         break
++                       fi
++                     done
++                     if test -z "$haveit"; then
++                       LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir"
++                     fi
++                     if test "$hardcode_minus_L" != no; then
++                       dnl FIXME: Not sure whether we should use
++                       dnl "-L$found_dir -l$name" or "-L$found_dir $found_so"
++                       dnl here.
++                       LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
++                     else
++                       dnl We cannot use $hardcode_runpath_var and LD_RUN_PATH
++                       dnl here, because this doesn't fit in flags passed to the
++                       dnl compiler. So give up. No hardcoding. This affects only
++                       dnl very old systems.
++                       dnl FIXME: Not sure whether we should use
++                       dnl "-L$found_dir -l$name" or "-L$found_dir $found_so"
++                       dnl here.
++                       LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-l$name"
++                     fi
++                   fi
++                 fi
++               fi
++             else
++               if test "X$found_a" != "X"; then
++                 dnl Linking with a static library.
++                 LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_a"
++               else
++                 dnl We shouldn't come here, but anyway it's good to have a
++                 dnl fallback.
++                 LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name"
++               fi
++             fi
++             dnl Assume the include files are nearby.
++             additional_includedir=
++             case "$found_dir" in
++               */lib | */lib/)
++                 basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e 's,/lib/*$,,'`
++                 additional_includedir="$basedir/include"
++                 ;;
++             esac
++             if test "X$additional_includedir" != "X"; then
++               dnl Potentially add $additional_includedir to $INCNAME.
++               dnl But don't add it
++               dnl   1. if it's the standard /usr/include,
++               dnl   2. if it's /usr/local/include and we are using GCC on Linux,
++               dnl   3. if it's already present in $CPPFLAGS or the already
++               dnl      constructed $INCNAME,
++               dnl   4. if it doesn't exist as a directory.
++               if test "X$additional_includedir" != "X/usr/include"; then
++                 haveit=
++                 if test "X$additional_includedir" = "X/usr/local/include"; then
++                   if test -n "$GCC"; then
++                     case $host_os in
++                       linux* | gnu* | k*bsd*-gnu) haveit=yes;;
++                     esac
++                   fi
++                 fi
++                 if test -z "$haveit"; then
++                   for x in $CPPFLAGS $INC[]NAME; do
++                     AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++                     if test "X$x" = "X-I$additional_includedir"; then
++                       haveit=yes
++                       break
++                     fi
++                   done
++                   if test -z "$haveit"; then
++                     if test -d "$additional_includedir"; then
++                       dnl Really add $additional_includedir to $INCNAME.
++                       INC[]NAME="${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir"
++                     fi
++                   fi
++                 fi
++               fi
++             fi
++             dnl Look for dependencies.
++             if test -n "$found_la"; then
++               dnl Read the .la file. It defines the variables
++               dnl dlname, library_names, old_library, dependency_libs, current,
++               dnl age, revision, installed, dlopen, dlpreopen, libdir.
++               save_libdir="$libdir"
++               case "$found_la" in
++                 */* | *\\*) . "$found_la" ;;
++                 *) . "./$found_la" ;;
++               esac
++               libdir="$save_libdir"
++               dnl We use only dependency_libs.
++               for dep in $dependency_libs; do
++                 case "$dep" in
++                   -L*)
++                     additional_libdir=`echo "X$dep" | sed -e 's/^X-L//'`
++                     dnl Potentially add $additional_libdir to $LIBNAME and $LTLIBNAME.
++                     dnl But don't add it
++                     dnl   1. if it's the standard /usr/lib,
++                     dnl   2. if it's /usr/local/lib and we are using GCC on Linux,
++                     dnl   3. if it's already present in $LDFLAGS or the already
++                     dnl      constructed $LIBNAME,
++                     dnl   4. if it doesn't exist as a directory.
++                     if test "X$additional_libdir" != "X/usr/lib"; then
++                       haveit=
++                       if test "X$additional_libdir" = "X/usr/local/lib"; then
++                         if test -n "$GCC"; then
++                           case $host_os in
++                             linux* | gnu* | k*bsd*-gnu) haveit=yes;;
++                           esac
++                         fi
++                       fi
++                       if test -z "$haveit"; then
++                         haveit=
++                         for x in $LDFLAGS $LIB[]NAME; do
++                           AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++                           if test "X$x" = "X-L$additional_libdir"; then
++                             haveit=yes
++                             break
++                           fi
++                         done
++                         if test -z "$haveit"; then
++                           if test -d "$additional_libdir"; then
++                             dnl Really add $additional_libdir to $LIBNAME.
++                             LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$additional_libdir"
++                           fi
++                         fi
++                         haveit=
++                         for x in $LDFLAGS $LTLIB[]NAME; do
++                           AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++                           if test "X$x" = "X-L$additional_libdir"; then
++                             haveit=yes
++                             break
++                           fi
++                         done
++                         if test -z "$haveit"; then
++                           if test -d "$additional_libdir"; then
++                             dnl Really add $additional_libdir to $LTLIBNAME.
++                             LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$additional_libdir"
++                           fi
++                         fi
++                       fi
++                     fi
++                     ;;
++                   -R*)
++                     dir=`echo "X$dep" | sed -e 's/^X-R//'`
++                     if test "$enable_rpath" != no; then
++                       dnl Potentially add DIR to rpathdirs.
++                       dnl The rpathdirs will be appended to $LIBNAME at the end.
++                       haveit=
++                       for x in $rpathdirs; do
++                         if test "X$x" = "X$dir"; then
++                           haveit=yes
++                           break
++                         fi
++                       done
++                       if test -z "$haveit"; then
++                         rpathdirs="$rpathdirs $dir"
++                       fi
++                       dnl Potentially add DIR to ltrpathdirs.
++                       dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.
++                       haveit=
++                       for x in $ltrpathdirs; do
++                         if test "X$x" = "X$dir"; then
++                           haveit=yes
++                           break
++                         fi
++                       done
++                       if test -z "$haveit"; then
++                         ltrpathdirs="$ltrpathdirs $dir"
++                       fi
++                     fi
++                     ;;
++                   -l*)
++                     dnl Handle this in the next round.
++                     names_next_round="$names_next_round "`echo "X$dep" | sed -e 's/^X-l//'`
++                     ;;
++                   *.la)
++                     dnl Handle this in the next round. Throw away the .la's
++                     dnl directory; it is already contained in a preceding -L
++                     dnl option.
++                     names_next_round="$names_next_round "`echo "X$dep" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\.la$,,'`
++                     ;;
++                   *)
++                     dnl Most likely an immediate library name.
++                     LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$dep"
++                     LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep"
++                     ;;
++                 esac
++               done
++             fi
++           else
++             dnl Didn't find the library; assume it is in the system directories
++             dnl known to the linker and runtime loader. (All the system
++             dnl directories known to the linker should also be known to the
++             dnl runtime loader, otherwise the system is severely misconfigured.)
++             LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-l$name"
++             LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name"
++           fi
++         fi
++       fi
++     done
++   done
++   if test "X$rpathdirs" != "X"; then
++     if test -n "$hardcode_libdir_separator"; then
++       dnl Weird platform: only the last -rpath option counts, the user must
++       dnl pass all path elements in one option. We can arrange that for a
++       dnl single library, but not when more than one $LIBNAMEs are used.
++       alldirs=
++       for found_dir in $rpathdirs; do
++         alldirs="${alldirs}${alldirs:+$hardcode_libdir_separator}$found_dir"
++       done
++       dnl Note: hardcode_libdir_flag_spec uses $libdir and $wl.
++       acl_save_libdir="$libdir"
++       libdir="$alldirs"
++       eval flag=\"$hardcode_libdir_flag_spec\"
++       libdir="$acl_save_libdir"
++       LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$flag"
++     else
++       dnl The -rpath options are cumulative.
++       for found_dir in $rpathdirs; do
++         acl_save_libdir="$libdir"
++         libdir="$found_dir"
++         eval flag=\"$hardcode_libdir_flag_spec\"
++         libdir="$acl_save_libdir"
++         LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$flag"
++       done
++     fi
++   fi
++   if test "X$ltrpathdirs" != "X"; then
++     dnl When using libtool, the option that works for both libraries and
++     dnl executables is -R. The -R options are cumulative.
++     for found_dir in $ltrpathdirs; do
++       LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir"
++     done
++   fi
++ ])
++ 
++ dnl AC_LIB_APPENDTOVAR(VAR, CONTENTS) appends the elements of CONTENTS to VAR,
++ dnl unless already present in VAR.
++ dnl Works only for CPPFLAGS, not for LIB* variables because that sometimes
++ dnl contains two or three consecutive elements that belong together.
++ AC_DEFUN([AC_LIB_APPENDTOVAR],
++ [
++   for element in [$2]; do
++     haveit=
++     for x in $[$1]; do
++       AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
++       if test "X$x" = "X$element"; then
++         haveit=yes
++         break
++       fi
++     done
++     if test -z "$haveit"; then
++       [$1]="${[$1]}${[$1]:+ }$element"
++     fi
++   done
++ ])
++ 
++ # lib-ld.m4 serial 3 (gettext-0.13)
++ dnl Copyright (C) 1996-2003 Free Software Foundation, Inc.
++ dnl This file is free software; the Free Software Foundation
++ dnl gives unlimited permission to copy and/or distribute it,
++ dnl with or without modifications, as long as this notice is preserved.
++ 
++ dnl Subroutines of libtool.m4,
++ dnl with replacements s/AC_/AC_LIB/ and s/lt_cv/acl_cv/ to avoid collision
++ dnl with libtool.m4.
++ 
++ dnl From libtool-1.4. Sets the variable with_gnu_ld to yes or no.
++ AC_DEFUN([AC_LIB_PROG_LD_GNU],
++ [AC_CACHE_CHECK([if the linker ($LD) is GNU ld], acl_cv_prog_gnu_ld,
++ [# I'd rather use --version here, but apparently some GNU ld's only accept -v.
++ case `$LD -v 2>&1 </dev/null` in
++ *GNU* | *'with BFD'*)
++   acl_cv_prog_gnu_ld=yes ;;
++ *)
++   acl_cv_prog_gnu_ld=no ;;
++ esac])
++ with_gnu_ld=$acl_cv_prog_gnu_ld
++ ])
++ 
++ dnl From libtool-1.4. Sets the variable LD.
++ AC_DEFUN([AC_LIB_PROG_LD],
++ [AC_ARG_WITH(gnu-ld,
++ [  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]],
++ test "$withval" = no || with_gnu_ld=yes, with_gnu_ld=no)
++ AC_REQUIRE([AC_PROG_CC])dnl
++ AC_REQUIRE([AC_CANONICAL_HOST])dnl
++ # Prepare PATH_SEPARATOR.
++ # The user is always right.
++ if test "${PATH_SEPARATOR+set}" != set; then
++   echo "#! /bin/sh" >conf$$.sh
++   echo  "exit 0"   >>conf$$.sh
++   chmod +x conf$$.sh
++   if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
++     PATH_SEPARATOR=';'
++   else
++     PATH_SEPARATOR=:
++   fi
++   rm -f conf$$.sh
++ fi
++ ac_prog=ld
++ if test "$GCC" = yes; then
++   # Check if gcc -print-prog-name=ld gives a path.
++   AC_MSG_CHECKING([for ld used by GCC])
++   case $host in
++   *-*-mingw*)
++     # gcc leaves a trailing carriage return which upsets mingw
++     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
++   *)
++     ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
++   esac
++   case $ac_prog in
++     # Accept absolute paths.
++     [[\\/]* | [A-Za-z]:[\\/]*)]
++       [re_direlt='/[^/][^/]*/\.\./']
++       # Canonicalize the path of ld
++       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
++       while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
++ 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
++       done
++       test -z "$LD" && LD="$ac_prog"
++       ;;
++   "")
++     # If it fails, then pretend we aren't using GCC.
++     ac_prog=ld
++     ;;
++   *)
++     # If it is relative, then search for the first ld in PATH.
++     with_gnu_ld=unknown
++     ;;
++   esac
++ elif test "$with_gnu_ld" = yes; then
++   AC_MSG_CHECKING([for GNU ld])
++ else
++   AC_MSG_CHECKING([for non-GNU ld])
++ fi
++ AC_CACHE_VAL(acl_cv_path_LD,
++ [if test -z "$LD"; then
++   IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS="${IFS}${PATH_SEPARATOR-:}"
++   for ac_dir in $PATH; do
++     test -z "$ac_dir" && ac_dir=.
++     if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
++       acl_cv_path_LD="$ac_dir/$ac_prog"
++       # Check to see if the program is GNU ld.  I'd rather use --version,
++       # but apparently some GNU ld's only accept -v.
++       # Break only if it was the GNU/non-GNU ld that we prefer.
++       case `"$acl_cv_path_LD" -v 2>&1 < /dev/null` in
++       *GNU* | *'with BFD'*)
++ 	test "$with_gnu_ld" != no && break ;;
++       *)
++ 	test "$with_gnu_ld" != yes && break ;;
++       esac
++     fi
++   done
++   IFS="$ac_save_ifs"
++ else
++   acl_cv_path_LD="$LD" # Let the user override the test with a path.
++ fi])
++ LD="$acl_cv_path_LD"
++ if test -n "$LD"; then
++   AC_MSG_RESULT($LD)
++ else
++   AC_MSG_RESULT(no)
++ fi
++ test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
++ AC_LIB_PROG_LD_GNU
++ ])
++ 
++ # pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-
++ # 
++ # Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
++ #
++ # This program is free software; you can redistribute it and/or modify
++ # it under the terms of the GNU General Public License as published by
++ # the Free Software Foundation; either version 2 of the License, or
++ # (at your option) any later version.
++ #
++ # This program is distributed in the hope that it will be useful, but
++ # WITHOUT ANY WARRANTY; without even the implied warranty of
++ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
++ # General Public License for more details.
++ #
++ # You should have received a copy of the GNU General Public License
++ # along with this program; if not, write to the Free Software
++ # Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
++ #
++ # As a special exception to the GNU General Public License, if you
++ # distribute this file as part of a program that contains a
++ # configuration script generated by Autoconf, you may include it under
++ # the same distribution terms that you use for the rest of that program.
++ 
++ # PKG_PROG_PKG_CONFIG([MIN-VERSION])
++ # ----------------------------------
++ AC_DEFUN([PKG_PROG_PKG_CONFIG],
++ [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
++ m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
++ AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])dnl
++ if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
++ 	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
++ fi
++ if test -n "$PKG_CONFIG"; then
++ 	_pkg_min_version=m4_ifval([$1], [$1], [0.9.0])
++ 	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
++ 	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
++ 		AC_MSG_RESULT([yes])
++ 	else
++ 		AC_MSG_RESULT([no])
++ 		PKG_CONFIG=""
++ 	fi
++ 		
++ fi[]dnl
++ ])# PKG_PROG_PKG_CONFIG
++ 
++ # PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
++ #
++ # Check to see whether a particular set of modules exists.  Similar
++ # to PKG_CHECK_MODULES(), but does not set variables or print errors.
++ #
++ #
++ # Similar to PKG_CHECK_MODULES, make sure that the first instance of
++ # this or PKG_CHECK_MODULES is called, or make sure to call
++ # PKG_CHECK_EXISTS manually
++ # --------------------------------------------------------------
++ AC_DEFUN([PKG_CHECK_EXISTS],
++ [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
++ if test -n "$PKG_CONFIG" && \
++     AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
++   m4_ifval([$2], [$2], [:])
++ m4_ifvaln([$3], [else
++   $3])dnl
++ fi])
++ 
++ 
++ # _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])
++ # ---------------------------------------------
++ m4_define([_PKG_CONFIG],
++ [if test -n "$PKG_CONFIG"; then
++         PKG_CHECK_EXISTS([$3],
++                          [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 "$3" 2>/dev/null`],
++ 			 [pkg_failed=yes])
++ else
++ 	pkg_failed=untried
++ fi[]dnl
++ ])# _PKG_CONFIG
++ 
++ # PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
++ # [ACTION-IF-NOT-FOUND])
++ #
++ #
++ # Note that if there is a possibility the first call to
++ # PKG_CHECK_MODULES might not happen, you should be sure to include an
++ # explicit call to PKG_PROG_PKG_CONFIG in your configure.ac
++ #
++ #
++ # --------------------------------------------------------------
++ AC_DEFUN([PKG_CHECK_MODULES],
++ [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
++ AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
++ AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl
++ 
++ pkg_failed=no
++ AC_MSG_CHECKING([for $1])
++ 
++ _PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
++ _PKG_CONFIG([$1][_LIBS], [libs], [$2])
++ 
++ if test $pkg_failed = yes; then
++ 	$1[]_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "$2"`
++ 	# Put the nasty error message in config.log where it belongs
++ 	echo "$$1[]_PKG_ERRORS" 1>&AS_MESSAGE_LOG_FD
++ 
++ 	ifelse([$4], , [AC_MSG_ERROR(dnl
++ [Package requirements ($2) were not met.
++ Consider adjusting the PKG_CONFIG_PATH environment variable if you
++ installed software in a non-standard prefix.
++ 
++ Alternatively you may set the $1_CFLAGS and $1_LIBS environment variables
++ to avoid the need to call pkg-config.  See the pkg-config man page for
++ more details.])],
++ 		[$4])
++ elif test $pkg_failed = untried; then
++ 	ifelse([$4], , [AC_MSG_FAILURE(dnl
++ [The pkg-config script could not be found or is too old.  Make sure it
++ is in your PATH or set the PKG_CONFIG environment variable to the full
++ path to pkg-config.
++ 
++ Alternatively you may set the $1_CFLAGS and $1_LIBS environment variables
++ to avoid the need to call pkg-config.  See the pkg-config man page for
++ more details.
++ 
++ To get pkg-config, see <http://www.freedesktop.org/software/pkgconfig>.])],
++ 		[$4])
++ else
++ 	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
++ 	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
++         AC_MSG_RESULT([yes])
++ 	ifelse([$3], , :, [$3])
++ fi[]dnl
++ ])# PKG_CHECK_MODULES
++ 
diff -Naur libnids-1.21/CHANGES.rej libnids-1.21_patched/CHANGES.rej
--- libnids-1.21/CHANGES.rej	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/CHANGES.rej	2010-03-27 20:18:42.557836219 +0100
@@ -0,0 +1,140 @@
+***************
+*** 0 ****
+--- 1,137 ----
++ v1.21 May 10 2006
++ - more externals to access libnids' intrinsics from the outside
++ - nids_unregister_*()
++ - UDP checksumming fix (0 is not an error according to RFC768)
++ - nids_params.tcp_workarounds
++ - nids_params.multiproc and queue_limit: merged a patch which creates a 
++ separate thread for packet capture; 
++ - in killtcp.c, send two more RST packets (required because of MS05-019
++ patch)
++ - glibc 2.4 syslog.h disaster workaround
++ 
++ v1.20 Feb 4 2005
++ - added wscale option parsing; surprisingly, it seems to be in some use
++ - added nids_dispatch(), for systems which do not ignore pcap timeout
++ - ability to specify hosts/networks for which we do not check checksums
++ 
++ v1.19 Aug 08 2004
++ - fixed signed/unsigned comparisons; 1.18 could be possibly crashed in tcp
++   options parsing (though an unlikely to happen memory layout is required);
++   now the source is compiled with -W -Wall
++ - export pcap header of the last received packet (to get timestamp etc)
++ - export the timeout parameter to pcap_open_live in params
++ - support DLT_PRISM_HEADER
++ - support DLT_PPP_SERIAL
++ - let through dataless acks
++ - fixed raw_init() prototype
++ - switched to use %edi instead of %ebx in csum_partial to make gcc-3.5 happy
++   when compiling with -fPIC; cleaned inline asm
++ - fixed a bug when a queued FIN segment was not processed properly, which
++   resulted in not closing a stream
++ 
++ v1.18 Oct 15 2003
++ - reject tcp packets with old timestamp; needed to pass fragroute test;
++   well, linux 2.0.36 did not support this ;)
++ - fixed memory corruption which could be caused by overlarge TCP packets
++ - adjusted checksum.c to not use multiline literals (for gcc 3.3)
++ - in configure.in, even if found libnet files, try compilation; there is
++   another library with the same name
++ - fix a bug in "collect" field handling; if you did collect-- and then
++   collect++ (which is rare), you would get a single junk packet
++ - correct handling of exec_prefix in configure.in
++ - unlink config.status in "make distclean"
++ - use pcap_hdr->caplen instead pcap_hdr->len; the only gain seems to be to
++   gracefully handle pcap files with too short snaplen
++ - changed soname to libnids.so.1.x, as binary compatibility is not
++   guaranteed
++ - switched to sourceforge as homepage
++ 
++ v1.17 Dec 12 2002
++ - fixed a stupid bug in TCP reassembly; having received a particular order
++   of TCP out of frame segments, libnids could lost track of the current 
++   seq, and miss the following data stream
++ - DLT_FDDI
++ - benign typo in hash.c
++ - mentioned usefulness of two process buffering on a fast network
++ 
++ v1.17rc1 Aug 30 2002
++ - support for libnet-1.1 and --with-libnet=no
++ - added support for libpcap save files
++ - finally, DLT_LINUX_SLL is recognized
++ - removed a horrible assumption on sizeof(pointer); it could result in
++   segfault in scan.c
++ - --enable-shared
++ - __i386 -> __i386__ || __i386 :(
++ - support for 802.1Q VLAN 
++ - support for wireless frames (DLT_IEEE802_11)
++ - got rid of (obsolete) pcap_open_live_new
++ - bail out if link type is unknown, instead of pretending it is ethernet
++ - $(MAKE) -> $(MAKE) $(AM_MAKEFLAGS)
++ - added a working link to Ptacek-Newsham paper
++ - %hi -> %hu :)
++ - align IP header if necessary (should not be)
++ - improved libraries detection
++ - mentioned usefulness od setsockopt(...SO_RCVBUF...) on a fast network
++ 
++ v1.16 Nov 3 2000
++ - nah, at least a release forced by a security bug. A typo in libnids.c
++ could cause libnids to segfault when source routed frame has been received.
++ 
++ v1.15 Oct 9 2000
++ - token ring support
++ - new configurable option (non-default): if a tcp callback hasn't processed 
++   all available data, it is called immediately again
++ - fixed alignment in hash.c, which caused sigsegv on Sparc
++ - another _obviously_ redundant include file added to configure test progs
++ - html version of the API documentation
++ 
++ v1.14 Jun 28 2000
++ - fixed memory leak in tcp.c (queued tcp segments used to be not freed
++   after connection termination)
++ - added support to capture packets on all interfaces, including loopback
++   (linux only, using new libpcap features - autoconf changed)
++ - added nids_register_udp(); if anyone cares for UDP checksums...
++ - stupid bug in nids_register_ip_frag() fixed
++ - removed comments from asm code in checksum.c; Solaris compiler didn't
++   recognized them - sigh
++ - signed/unsigned bug in scan.c fixed
++ - tcp callback could be notified even if no nw data arrived - fixed
++ - added ability to disable tcp processing
++ - added ability to refrain from setting promisc flag
++ - libc5 support
++ - alpha platform support
++ - now it's possible to do setuid(nobody) after nids_init() with no loss
++   of functionality (killtcp works)
++ - removed pcap_lookupnet() call - one can capture packets from an interface
++   with no IP assigned
++ - hash function in tcp.c with pseudorandom parameters
++ - #define NIDS_MAJOR 1, #define NIDS_MINOR 14 in nids.h
++ 
++ v1.13 Jan 18 2000
++ - Changes by Dug Song:
++   - GNU autoconf support
++   - code cleanup and new libnids(3) manpage
++   - disable portscan detection if scan_num_hosts == 0
++   - new field in nids_params for pcap(3) support: pcap_filter
++   - subtle bugfix in ip_check_ext()
++   - Solaris support (endianness fixes, etc.)
++ - another tiny check in tcp.c 
++ 
++ v1.12 Sep 15 1999
++ - processing of ICMP Destination Unreachable 
++ - nids_next() and nids_getfd() functions added; new fields in nids_params:
++   no_mem, ip_filter
++ - clean error reporting via nids_errbuf; used by nids_init(), nids_next(), 
++   nids_getfd()
++ - some more samples
++ 
++ v1.11 Aug 20 1999
++ - some stupid bugs removed (hopefully no more segfaults)
++ 
++ v1.1 Aug 10 1999
++ - *BSD support added by Dug Song
++ - some minor cleanups in libnids.c
++ - changed the license to GPL
++ 
++ v1.0 July 30 1999 
++ - Initial public release
diff -Naur libnids-1.21/config.guess.rej libnids-1.21_patched/config.guess.rej
--- libnids-1.21/config.guess.rej	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/config.guess.rej	2010-03-27 20:18:43.901854451 +0100
@@ -0,0 +1,1381 @@
+***************
+*** 0 ****
+--- 1,1378 ----
++ #! /bin/sh
++ # Attempt to guess a canonical system name.
++ #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
++ #   Free Software Foundation, Inc.
++ 
++ timestamp='2000-12-15'
++ 
++ # This file is free software; you can redistribute it and/or modify it
++ # under the terms of the GNU General Public License as published by
++ # the Free Software Foundation; either version 2 of the License, or
++ # (at your option) any later version.
++ #
++ # This program is distributed in the hope that it will be useful, but
++ # WITHOUT ANY WARRANTY; without even the implied warranty of
++ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
++ # General Public License for more details.
++ #
++ # You should have received a copy of the GNU General Public License
++ # along with this program; if not, write to the Free Software
++ # Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
++ #
++ # As a special exception to the GNU General Public License, if you
++ # distribute this file as part of a program that contains a
++ # configuration script generated by Autoconf, you may include it under
++ # the same distribution terms that you use for the rest of that program.
++ 
++ # Written by Per Bothner <bothner@cygnus.com>.
++ # Please send patches to <config-patches@gnu.org>.
++ #
++ # This script attempts to guess a canonical system name similar to
++ # config.sub.  If it succeeds, it prints the system name on stdout, and
++ # exits with 0.  Otherwise, it exits with 1.
++ #
++ # The plan is that this can be called by configure scripts if you
++ # don't specify an explicit build system type.
++ #
++ # Only a few systems have been added to this list; please add others
++ # (but try to keep the structure clean).
++ #
++ 
++ me=`echo "$0" | sed -e 's,.*/,,'`
++ 
++ usage="\
++ Usage: $0 [OPTION]
++ 
++ Output the configuration name of the system \`$me' is run on.
++ 
++ Operation modes:
++   -h, --help         print this help, then exit
++   -t, --time-stamp   print date of last modification, then exit
++   -v, --version      print version number, then exit
++ 
++ Report bugs and patches to <config-patches@gnu.org>."
++ 
++ version="\
++ GNU config.guess ($timestamp)
++ 
++ Originally written by Per Bothner.
++ Copyright (C) 1992, 93, 94, 95, 96, 97, 98, 99, 2000
++ Free Software Foundation, Inc.
++ 
++ This is free software; see the source for copying conditions.  There is NO
++ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
++ 
++ help="
++ Try \`$me --help' for more information."
++ 
++ # Parse command line
++ while test $# -gt 0 ; do
++   case $1 in
++     --time-stamp | --time* | -t )
++        echo "$timestamp" ; exit 0 ;;
++     --version | -v )
++        echo "$version" ; exit 0 ;;
++     --help | --h* | -h )
++        echo "$usage"; exit 0 ;;
++     -- )     # Stop option processing
++        shift; break ;;
++     - )	# Use stdin as input.
++        break ;;
++     -* )
++        echo "$me: invalid option $1$help" >&2
++        exit 1 ;;
++     * )
++        break ;;
++   esac
++ done
++ 
++ if test $# != 0; then
++   echo "$me: too many arguments$help" >&2
++   exit 1
++ fi
++ 
++ 
++ dummy=dummy-$$
++ trap 'rm -f $dummy.c $dummy.o $dummy; exit 1' 1 2 15
++ 
++ # CC_FOR_BUILD -- compiler used by this script.
++ # Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
++ # use `HOST_CC' if defined, but it is deprecated.
++ 
++ case $CC_FOR_BUILD,$HOST_CC,$CC in
++  ,,)    echo "int dummy(){}" > $dummy.c
++ 	for c in cc gcc c89 ; do
++ 	  ($c $dummy.c -c -o $dummy.o) >/dev/null 2>&1
++ 	  if test $? = 0 ; then
++ 	     CC_FOR_BUILD="$c"; break
++ 	  fi
++ 	done
++ 	rm -f $dummy.c $dummy.o
++ 	if test x"$CC_FOR_BUILD" = x ; then
++ 	  CC_FOR_BUILD=no_compiler_found
++ 	fi
++ 	;;
++  ,,*)   CC_FOR_BUILD=$CC ;;
++  ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
++ esac
++ 
++ # This is needed to find uname on a Pyramid OSx when run in the BSD universe.
++ # (ghazi@noc.rutgers.edu 8/24/94.)
++ if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
++ 	PATH=$PATH:/.attbin ; export PATH
++ fi
++ 
++ UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
++ UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
++ UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
++ UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
++ 
++ # Note: order is significant - the case branches are not exclusive.
++ 
++ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
++     *:NetBSD:*:*)
++ 	# Netbsd (nbsd) targets should (where applicable) match one or
++ 	# more of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,
++ 	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
++ 	# switched to ELF, *-*-netbsd* would select the old
++ 	# object file format.  This provides both forward
++ 	# compatibility and a consistent mechanism for selecting the
++ 	# object file format.
++ 	# Determine the machine/vendor (is the vendor relevant).
++ 	case "${UNAME_MACHINE}" in
++ 	    amiga) machine=m68k-unknown ;;
++ 	    arm32) machine=arm-unknown ;;
++ 	    atari*) machine=m68k-atari ;;
++ 	    sun3*) machine=m68k-sun ;;
++ 	    mac68k) machine=m68k-apple ;;
++ 	    macppc) machine=powerpc-apple ;;
++ 	    hp3[0-9][05]) machine=m68k-hp ;;
++ 	    ibmrt|romp-ibm) machine=romp-ibm ;;
++ 	    *) machine=${UNAME_MACHINE}-unknown ;;
++ 	esac
++ 	# The Operating System including object format, if it has switched
++ 	# to ELF recently, or will in the future.
++ 	case "${UNAME_MACHINE}" in
++ 	    i386|sparc|amiga|arm*|hp300|mvme68k|vax|atari|luna68k|mac68k|news68k|next68k|pc532|sun3*|x68k)
++ 		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
++ 			| grep __ELF__ >/dev/null
++ 		then
++ 		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
++ 		    # Return netbsd for either.  FIX?
++ 		    os=netbsd
++ 		else
++ 		    os=netbsdelf
++ 		fi
++ 		;;
++ 	    *)
++ 	        os=netbsd
++ 		;;
++ 	esac
++ 	# The OS release
++ 	release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
++ 	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
++ 	# contains redundant information, the shorter form:
++ 	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
++ 	echo "${machine}-${os}${release}"
++ 	exit 0 ;;
++     alpha:OSF1:*:*)
++ 	if test $UNAME_RELEASE = "V4.0"; then
++ 		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
++ 	fi
++ 	# A Vn.n version is a released version.
++ 	# A Tn.n version is a released field test version.
++ 	# A Xn.n version is an unreleased experimental baselevel.
++ 	# 1.2 uses "1.2" for uname -r.
++ 	cat <<EOF >$dummy.s
++ 	.data
++ \$Lformat:
++ 	.byte 37,100,45,37,120,10,0	# "%d-%x\n"
++ 
++ 	.text
++ 	.globl main
++ 	.align 4
++ 	.ent main
++ main:
++ 	.frame \$30,16,\$26,0
++ 	ldgp \$29,0(\$27)
++ 	.prologue 1
++ 	.long 0x47e03d80 # implver \$0
++ 	lda \$2,-1
++ 	.long 0x47e20c21 # amask \$2,\$1
++ 	lda \$16,\$Lformat
++ 	mov \$0,\$17
++ 	not \$1,\$18
++ 	jsr \$26,printf
++ 	ldgp \$29,0(\$26)
++ 	mov 0,\$16
++ 	jsr \$26,exit
++ 	.end main
++ EOF
++ 	$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null
++ 	if test "$?" = 0 ; then
++ 		case `./$dummy` in
++ 			0-0)
++ 				UNAME_MACHINE="alpha"
++ 				;;
++ 			1-0)
++ 				UNAME_MACHINE="alphaev5"
++ 				;;
++ 			1-1)
++ 				UNAME_MACHINE="alphaev56"
++ 				;;
++ 			1-101)
++ 				UNAME_MACHINE="alphapca56"
++ 				;;
++ 			2-303)
++ 				UNAME_MACHINE="alphaev6"
++ 				;;
++ 			2-307)
++ 				UNAME_MACHINE="alphaev67"
++ 				;;
++ 		esac
++ 	fi
++ 	rm -f $dummy.s $dummy
++ 	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
++ 	exit 0 ;;
++     Alpha\ *:Windows_NT*:*)
++ 	# How do we know it's Interix rather than the generic POSIX subsystem?
++ 	# Should we change UNAME_MACHINE based on the output of uname instead
++ 	# of the specific Alpha model?
++ 	echo alpha-pc-interix
++ 	exit 0 ;;
++     21064:Windows_NT:50:3)
++ 	echo alpha-dec-winnt3.5
++ 	exit 0 ;;
++     Amiga*:UNIX_System_V:4.0:*)
++ 	echo m68k-unknown-sysv4
++ 	exit 0;;
++     amiga:OpenBSD:*:*)
++ 	echo m68k-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:[Aa]miga[Oo][Ss]:*:*)
++ 	echo ${UNAME_MACHINE}-unknown-amigaos
++ 	exit 0 ;;
++     arc64:OpenBSD:*:*)
++ 	echo mips64el-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     arc:OpenBSD:*:*)
++ 	echo mipsel-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     hkmips:OpenBSD:*:*)
++ 	echo mips-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     pmax:OpenBSD:*:*)
++ 	echo mipsel-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     sgi:OpenBSD:*:*)
++ 	echo mips-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     wgrisc:OpenBSD:*:*)
++ 	echo mipsel-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:OS/390:*:*)
++ 	echo i370-ibm-openedition
++ 	exit 0 ;;
++     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
++ 	echo arm-acorn-riscix${UNAME_RELEASE}
++ 	exit 0;;
++     SR2?01:HI-UX/MPP:*:*)
++ 	echo hppa1.1-hitachi-hiuxmpp
++ 	exit 0;;
++     Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
++ 	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
++ 	if test "`(/bin/universe) 2>/dev/null`" = att ; then
++ 		echo pyramid-pyramid-sysv3
++ 	else
++ 		echo pyramid-pyramid-bsd
++ 	fi
++ 	exit 0 ;;
++     NILE*:*:*:dcosx)
++ 	echo pyramid-pyramid-svr4
++ 	exit 0 ;;
++     sun4H:SunOS:5.*:*)
++ 	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
++ 	exit 0 ;;
++     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
++ 	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
++ 	exit 0 ;;
++     i86pc:SunOS:5.*:*)
++ 	echo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
++ 	exit 0 ;;
++     sun4*:SunOS:6*:*)
++ 	# According to config.sub, this is the proper way to canonicalize
++ 	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
++ 	# it's likely to be more like Solaris than SunOS4.
++ 	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
++ 	exit 0 ;;
++     sun4*:SunOS:*:*)
++ 	case "`/usr/bin/arch -k`" in
++ 	    Series*|S4*)
++ 		UNAME_RELEASE=`uname -v`
++ 		;;
++ 	esac
++ 	# Japanese Language versions have a version number like `4.1.3-JL'.
++ 	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
++ 	exit 0 ;;
++     sun3*:SunOS:*:*)
++ 	echo m68k-sun-sunos${UNAME_RELEASE}
++ 	exit 0 ;;
++     sun*:*:4.2BSD:*)
++ 	UNAME_RELEASE=`(head -1 /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
++ 	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
++ 	case "`/bin/arch`" in
++ 	    sun3)
++ 		echo m68k-sun-sunos${UNAME_RELEASE}
++ 		;;
++ 	    sun4)
++ 		echo sparc-sun-sunos${UNAME_RELEASE}
++ 		;;
++ 	esac
++ 	exit 0 ;;
++     aushp:SunOS:*:*)
++ 	echo sparc-auspex-sunos${UNAME_RELEASE}
++ 	exit 0 ;;
++     atari*:OpenBSD:*:*)
++ 	echo m68k-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     # The situation for MiNT is a little confusing.  The machine name
++     # can be virtually everything (everything which is not
++     # "atarist" or "atariste" at least should have a processor
++     # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
++     # to the lowercase version "mint" (or "freemint").  Finally
++     # the system name "TOS" denotes a system which is actually not
++     # MiNT.  But MiNT is downward compatible to TOS, so this should
++     # be no problem.
++     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
++         echo m68k-atari-mint${UNAME_RELEASE}
++ 	exit 0 ;;
++     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
++ 	echo m68k-atari-mint${UNAME_RELEASE}
++         exit 0 ;;
++     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
++         echo m68k-atari-mint${UNAME_RELEASE}
++ 	exit 0 ;;
++     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
++         echo m68k-milan-mint${UNAME_RELEASE}
++         exit 0 ;;
++     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
++         echo m68k-hades-mint${UNAME_RELEASE}
++         exit 0 ;;
++     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
++         echo m68k-unknown-mint${UNAME_RELEASE}
++         exit 0 ;;
++     sun3*:OpenBSD:*:*)
++ 	echo m68k-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     mac68k:OpenBSD:*:*)
++ 	echo m68k-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     mvme68k:OpenBSD:*:*)
++ 	echo m68k-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     mvme88k:OpenBSD:*:*)
++ 	echo m88k-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     powerpc:machten:*:*)
++ 	echo powerpc-apple-machten${UNAME_RELEASE}
++ 	exit 0 ;;
++     RISC*:Mach:*:*)
++ 	echo mips-dec-mach_bsd4.3
++ 	exit 0 ;;
++     RISC*:ULTRIX:*:*)
++ 	echo mips-dec-ultrix${UNAME_RELEASE}
++ 	exit 0 ;;
++     VAX*:ULTRIX*:*:*)
++ 	echo vax-dec-ultrix${UNAME_RELEASE}
++ 	exit 0 ;;
++     2020:CLIX:*:* | 2430:CLIX:*:*)
++ 	echo clipper-intergraph-clix${UNAME_RELEASE}
++ 	exit 0 ;;
++     mips:*:*:UMIPS | mips:*:*:RISCos)
++ 	sed 's/^	//' << EOF >$dummy.c
++ #ifdef __cplusplus
++ #include <stdio.h>  /* for printf() prototype */
++ 	int main (int argc, char *argv[]) {
++ #else
++ 	int main (argc, argv) int argc; char *argv[]; {
++ #endif
++ 	#if defined (host_mips) && defined (MIPSEB)
++ 	#if defined (SYSTYPE_SYSV)
++ 	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
++ 	#endif
++ 	#if defined (SYSTYPE_SVR4)
++ 	  printf ("mips-mips-riscos%ssvr4\n", argv[1]); exit (0);
++ 	#endif
++ 	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
++ 	  printf ("mips-mips-riscos%sbsd\n", argv[1]); exit (0);
++ 	#endif
++ 	#endif
++ 	  exit (-1);
++ 	}
++ EOF
++ 	$CC_FOR_BUILD $dummy.c -o $dummy \
++ 	  && ./$dummy `echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` \
++ 	  && rm $dummy.c $dummy && exit 0
++ 	rm -f $dummy.c $dummy
++ 	echo mips-mips-riscos${UNAME_RELEASE}
++ 	exit 0 ;;
++     Night_Hawk:Power_UNIX:*:*)
++ 	echo powerpc-harris-powerunix
++ 	exit 0 ;;
++     m88k:CX/UX:7*:*)
++ 	echo m88k-harris-cxux7
++ 	exit 0 ;;
++     m88k:*:4*:R4*)
++ 	echo m88k-motorola-sysv4
++ 	exit 0 ;;
++     m88k:*:3*:R3*)
++ 	echo m88k-motorola-sysv3
++ 	exit 0 ;;
++     AViiON:dgux:*:*)
++         # DG/UX returns AViiON for all architectures
++         UNAME_PROCESSOR=`/usr/bin/uname -p`
++ 	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
++ 	then
++ 	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
++ 	       [ ${TARGET_BINARY_INTERFACE}x = x ]
++ 	    then
++ 		echo m88k-dg-dgux${UNAME_RELEASE}
++ 	    else
++ 		echo m88k-dg-dguxbcs${UNAME_RELEASE}
++ 	    fi
++ 	else
++ 	    echo i586-dg-dgux${UNAME_RELEASE}
++ 	fi
++  	exit 0 ;;
++     M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
++ 	echo m88k-dolphin-sysv3
++ 	exit 0 ;;
++     M88*:*:R3*:*)
++ 	# Delta 88k system running SVR3
++ 	echo m88k-motorola-sysv3
++ 	exit 0 ;;
++     XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
++ 	echo m88k-tektronix-sysv3
++ 	exit 0 ;;
++     Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
++ 	echo m68k-tektronix-bsd
++ 	exit 0 ;;
++     *:IRIX*:*:*)
++ 	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
++ 	exit 0 ;;
++     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
++ 	echo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id
++ 	exit 0 ;;              # Note that: echo "'`uname -s`'" gives 'AIX '
++     i?86:AIX:*:*)
++ 	echo i386-ibm-aix
++ 	exit 0 ;;
++     *:AIX:2:3)
++ 	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
++ 		sed 's/^		//' << EOF >$dummy.c
++ 		#include <sys/systemcfg.h>
++ 
++ 		main()
++ 			{
++ 			if (!__power_pc())
++ 				exit(1);
++ 			puts("powerpc-ibm-aix3.2.5");
++ 			exit(0);
++ 			}
++ EOF
++ 		$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0
++ 		rm -f $dummy.c $dummy
++ 		echo rs6000-ibm-aix3.2.5
++ 	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
++ 		echo rs6000-ibm-aix3.2.4
++ 	else
++ 		echo rs6000-ibm-aix3.2
++ 	fi
++ 	exit 0 ;;
++     *:AIX:*:4)
++ 	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | head -1 | awk '{ print $1 }'`
++ 	if /usr/sbin/lsattr -EHl ${IBM_CPU_ID} | grep POWER >/dev/null 2>&1; then
++ 		IBM_ARCH=rs6000
++ 	else
++ 		IBM_ARCH=powerpc
++ 	fi
++ 	if [ -x /usr/bin/oslevel ] ; then
++ 		IBM_REV=`/usr/bin/oslevel`
++ 	else
++ 		IBM_REV=4.${UNAME_RELEASE}
++ 	fi
++ 	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
++ 	exit 0 ;;
++     *:AIX:*:5)
++ 	case "`lsattr -El proc0 -a type -F value`" in
++ 	    PowerPC*) IBM_ARCH=powerpc
++ 		      IBM_MANUF=ibm ;;
++ 	    Itanium)  IBM_ARCH=ia64
++ 		      IBM_MANUF=unknown ;;
++ 	    POWER*)   IBM_ARCH=power
++ 		      IBM_MANUF=ibm ;;
++ 	    *)        IBM_ARCH=powerpc
++ 		      IBM_MANUF=ibm ;;
++ 	esac
++ 	echo ${IBM_ARCH}-${IBM_MANUF}-aix${UNAME_VERSION}.${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:AIX:*:*)
++ 	echo rs6000-ibm-aix
++ 	exit 0 ;;
++     ibmrt:4.4BSD:*|romp-ibm:BSD:*)
++ 	echo romp-ibm-bsd4.4
++ 	exit 0 ;;
++     ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
++ 	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
++ 	exit 0 ;;                           # report: romp-ibm BSD 4.3
++     *:BOSX:*:*)
++ 	echo rs6000-bull-bosx
++ 	exit 0 ;;
++     DPX/2?00:B.O.S.:*:*)
++ 	echo m68k-bull-sysv3
++ 	exit 0 ;;
++     9000/[34]??:4.3bsd:1.*:*)
++ 	echo m68k-hp-bsd
++ 	exit 0 ;;
++     hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
++ 	echo m68k-hp-bsd4.4
++ 	exit 0 ;;
++     9000/[34678]??:HP-UX:*:*)
++ 	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
++ 	case "${UNAME_MACHINE}" in
++ 	    9000/31? )            HP_ARCH=m68000 ;;
++ 	    9000/[34]?? )         HP_ARCH=m68k ;;
++ 	    9000/[678][0-9][0-9])
++               case "${HPUX_REV}" in
++                 11.[0-9][0-9])
++                   if [ -x /usr/bin/getconf ]; then
++                     sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
++                     sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
++                     case "${sc_cpu_version}" in
++                       523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
++                       528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
++                       532)                      # CPU_PA_RISC2_0
++                         case "${sc_kernel_bits}" in
++                           32) HP_ARCH="hppa2.0n" ;;
++                           64) HP_ARCH="hppa2.0w" ;;
++                         esac ;;
++                     esac
++                   fi ;;
++               esac
++               if [ "${HP_ARCH}" = "" ]; then
++               sed 's/^              //' << EOF >$dummy.c
++ 
++               #define _HPUX_SOURCE
++               #include <stdlib.h>
++               #include <unistd.h>
++ 
++               int main ()
++               {
++               #if defined(_SC_KERNEL_BITS)
++                   long bits = sysconf(_SC_KERNEL_BITS);
++               #endif
++                   long cpu  = sysconf (_SC_CPU_VERSION);
++ 
++                   switch (cpu)
++               	{
++               	case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
++               	case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
++               	case CPU_PA_RISC2_0:
++               #if defined(_SC_KERNEL_BITS)
++               	    switch (bits)
++               		{
++               		case 64: puts ("hppa2.0w"); break;
++               		case 32: puts ("hppa2.0n"); break;
++               		default: puts ("hppa2.0"); break;
++               		} break;
++               #else  /* !defined(_SC_KERNEL_BITS) */
++               	    puts ("hppa2.0"); break;
++               #endif
++               	default: puts ("hppa1.0"); break;
++               	}
++                   exit (0);
++               }
++ EOF
++ 	(CCOPTS= $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null ) && HP_ARCH=`./$dummy`
++ 	if test -z "$HP_ARCH"; then HP_ARCH=hppa; fi
++ 	rm -f $dummy.c $dummy
++ 	fi ;;
++ 	esac
++ 	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
++ 	exit 0 ;;
++     3050*:HI-UX:*:*)
++ 	sed 's/^	//' << EOF >$dummy.c
++ 	#include <unistd.h>
++ 	int
++ 	main ()
++ 	{
++ 	  long cpu = sysconf (_SC_CPU_VERSION);
++ 	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
++ 	     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct
++ 	     results, however.  */
++ 	  if (CPU_IS_PA_RISC (cpu))
++ 	    {
++ 	      switch (cpu)
++ 		{
++ 		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
++ 		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
++ 		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
++ 		  default: puts ("hppa-hitachi-hiuxwe2"); break;
++ 		}
++ 	    }
++ 	  else if (CPU_IS_HP_MC68K (cpu))
++ 	    puts ("m68k-hitachi-hiuxwe2");
++ 	  else puts ("unknown-hitachi-hiuxwe2");
++ 	  exit (0);
++ 	}
++ EOF
++ 	$CC_FOR_BUILD $dummy.c -o $dummy && ./$dummy && rm $dummy.c $dummy && exit 0
++ 	rm -f $dummy.c $dummy
++ 	echo unknown-hitachi-hiuxwe2
++ 	exit 0 ;;
++     9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
++ 	echo hppa1.1-hp-bsd
++ 	exit 0 ;;
++     9000/8??:4.3bsd:*:*)
++ 	echo hppa1.0-hp-bsd
++ 	exit 0 ;;
++     *9??*:MPE/iX:*:*)
++ 	echo hppa1.0-hp-mpeix
++ 	exit 0 ;;
++     hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
++ 	echo hppa1.1-hp-osf
++ 	exit 0 ;;
++     hp8??:OSF1:*:*)
++ 	echo hppa1.0-hp-osf
++ 	exit 0 ;;
++     i?86:OSF1:*:*)
++ 	if [ -x /usr/sbin/sysversion ] ; then
++ 	    echo ${UNAME_MACHINE}-unknown-osf1mk
++ 	else
++ 	    echo ${UNAME_MACHINE}-unknown-osf1
++ 	fi
++ 	exit 0 ;;
++     parisc*:Lites*:*:*)
++ 	echo hppa1.1-hp-lites
++ 	exit 0 ;;
++     hppa*:OpenBSD:*:*)
++ 	echo hppa-unknown-openbsd
++ 	exit 0 ;;
++     C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
++ 	echo c1-convex-bsd
++         exit 0 ;;
++     C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
++ 	if getsysinfo -f scalar_acc
++ 	then echo c32-convex-bsd
++ 	else echo c2-convex-bsd
++ 	fi
++         exit 0 ;;
++     C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
++ 	echo c34-convex-bsd
++         exit 0 ;;
++     C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
++ 	echo c38-convex-bsd
++         exit 0 ;;
++     C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
++ 	echo c4-convex-bsd
++         exit 0 ;;
++     CRAY*X-MP:*:*:*)
++ 	echo xmp-cray-unicos
++         exit 0 ;;
++     CRAY*Y-MP:*:*:*)
++ 	echo ymp-cray-unicos${UNAME_RELEASE}
++ 	exit 0 ;;
++     CRAY*[A-Z]90:*:*:*)
++ 	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
++ 	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
++ 	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/
++ 	exit 0 ;;
++     CRAY*TS:*:*:*)
++ 	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
++ 	exit 0 ;;
++     CRAY*T3D:*:*:*)
++ 	echo alpha-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
++ 	exit 0 ;;
++     CRAY*T3E:*:*:*)
++ 	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
++ 	exit 0 ;;
++     CRAY*SV1:*:*:*)
++ 	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
++ 	exit 0 ;;
++     CRAY-2:*:*:*)
++ 	echo cray2-cray-unicos
++         exit 0 ;;
++     F300:UNIX_System_V:*:*)
++         FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
++         FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
++         echo "f300-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
++         exit 0 ;;
++     F301:UNIX_System_V:*:*)
++        echo f301-fujitsu-uxpv`echo $UNAME_RELEASE | sed 's/ .*//'`
++        exit 0 ;;
++     hp300:OpenBSD:*:*)
++ 	echo m68k-unknown-openbsd${UNAME_RELEASE}
++ 	exit 0 ;;
++     i?86:BSD/386:*:* | i?86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
++ 	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
++ 	exit 0 ;;
++     sparc*:BSD/OS:*:*)
++ 	echo sparc-unknown-bsdi${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:BSD/OS:*:*)
++ 	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:FreeBSD:*:*)
++ 	echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
++ 	exit 0 ;;
++     *:OpenBSD:*:*)
++ 	echo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
++ 	exit 0 ;;
++     i*:CYGWIN*:*)
++ 	echo ${UNAME_MACHINE}-pc-cygwin
++ 	exit 0 ;;
++     i*:MINGW*:*)
++ 	echo ${UNAME_MACHINE}-pc-mingw32
++ 	exit 0 ;;
++     i*:PW*:*)
++ 	echo ${UNAME_MACHINE}-pc-pw32
++ 	exit 0 ;;
++     i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
++ 	# How do we know it's Interix rather than the generic POSIX subsystem?
++ 	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
++ 	# UNAME_MACHINE based on the output of uname instead of i386?
++ 	echo i386-pc-interix
++ 	exit 0 ;;
++     i*:UWIN*:*)
++ 	echo ${UNAME_MACHINE}-pc-uwin
++ 	exit 0 ;;
++     p*:CYGWIN*:*)
++ 	echo powerpcle-unknown-cygwin
++ 	exit 0 ;;
++     prep*:SunOS:5.*:*)
++ 	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
++ 	exit 0 ;;
++     *:GNU:*:*)
++ 	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
++ 	exit 0 ;;
++     i*86:Minix:*:*)
++ 	echo ${UNAME_MACHINE}-pc-minix
++ 	exit 0 ;;
++     *:Linux:*:*)
++ 
++ 	# The BFD linker knows what the default object file format is, so
++ 	# first see if it will tell us. cd to the root directory to prevent
++ 	# problems with other programs or directories called `ld' in the path.
++ 	ld_supported_emulations=`cd /; ld --help 2>&1 \
++ 			 | sed -ne '/supported emulations:/!d
++ 				    s/[ 	][ 	]*/ /g
++ 				    s/.*supported emulations: *//
++ 				    s/ .*//
++ 				    p'`
++         case "$ld_supported_emulations" in
++ 	  *ia64)
++ 		echo "${UNAME_MACHINE}-unknown-linux"
++ 		exit 0
++ 		;;
++ 	  i?86linux)
++ 		echo "${UNAME_MACHINE}-pc-linux-gnuaout"
++ 		exit 0
++ 		;;
++ 	  elf_i?86)
++ 		TENTATIVE="${UNAME_MACHINE}-pc-linux-gnu"
++ 		;;
++ 	  i?86coff)
++ 		echo "${UNAME_MACHINE}-pc-linux-gnucoff"
++ 		exit 0
++ 		;;
++ 	  sparclinux)
++ 		echo "${UNAME_MACHINE}-unknown-linux-gnuaout"
++ 		exit 0
++ 		;;
++ 	  elf32_sparc)
++ 		echo "${UNAME_MACHINE}-unknown-linux-gnu"
++ 		exit 0
++ 		;;
++ 	  armlinux)
++ 		echo "${UNAME_MACHINE}-unknown-linux-gnuaout"
++ 		exit 0
++ 		;;
++ 	  elf32arm*)
++ 		echo "${UNAME_MACHINE}-unknown-linux-gnuoldld"
++ 		exit 0
++ 		;;
++ 	  armelf_linux*)
++ 		echo "${UNAME_MACHINE}-unknown-linux-gnu"
++ 		exit 0
++ 		;;
++ 	  m68klinux)
++ 		echo "${UNAME_MACHINE}-unknown-linux-gnuaout"
++ 		exit 0
++ 		;;
++ 	  elf32ppc | elf32ppclinux)
++ 		# Determine Lib Version
++ 		cat >$dummy.c <<EOF
++ #include <features.h>
++ #if defined(__GLIBC__)
++ extern char __libc_version[];
++ extern char __libc_release[];
++ #endif
++ main(argc, argv)
++      int argc;
++      char *argv[];
++ {
++ #if defined(__GLIBC__)
++   printf("%s %s\n", __libc_version, __libc_release);
++ #else
++   printf("unkown\n");
++ #endif
++   return 0;
++ }
++ EOF
++ 		LIBC=""
++ 		$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null
++ 		if test "$?" = 0 ; then
++ 			./$dummy | grep 1\.99 > /dev/null
++ 			if test "$?" = 0 ; then
++ 				LIBC="libc1"
++ 			fi
++ 		fi
++ 		rm -f $dummy.c $dummy
++ 		echo powerpc-unknown-linux-gnu${LIBC}
++ 		exit 0
++ 		;;
++ 	  shelf_linux)
++ 		echo "${UNAME_MACHINE}-unknown-linux-gnu"
++ 		exit 0
++ 		;;
++ 	esac
++ 
++ 	if test "${UNAME_MACHINE}" = "alpha" ; then
++ 		cat <<EOF >$dummy.s
++ 			.data
++ 		\$Lformat:
++ 			.byte 37,100,45,37,120,10,0	# "%d-%x\n"
++ 
++ 			.text
++ 			.globl main
++ 			.align 4
++ 			.ent main
++ 		main:
++ 			.frame \$30,16,\$26,0
++ 			ldgp \$29,0(\$27)
++ 			.prologue 1
++ 			.long 0x47e03d80 # implver \$0
++ 			lda \$2,-1
++ 			.long 0x47e20c21 # amask \$2,\$1
++ 			lda \$16,\$Lformat
++ 			mov \$0,\$17
++ 			not \$1,\$18
++ 			jsr \$26,printf
++ 			ldgp \$29,0(\$26)
++ 			mov 0,\$16
++ 			jsr \$26,exit
++ 			.end main
++ EOF
++ 		LIBC=""
++ 		$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null
++ 		if test "$?" = 0 ; then
++ 			case `./$dummy` in
++ 			0-0)
++ 				UNAME_MACHINE="alpha"
++ 				;;
++ 			1-0)
++ 				UNAME_MACHINE="alphaev5"
++ 				;;
++ 			1-1)
++ 				UNAME_MACHINE="alphaev56"
++ 				;;
++ 			1-101)
++ 				UNAME_MACHINE="alphapca56"
++ 				;;
++ 			2-303)
++ 				UNAME_MACHINE="alphaev6"
++ 				;;
++ 			2-307)
++ 				UNAME_MACHINE="alphaev67"
++ 				;;
++ 			esac
++ 
++ 			objdump --private-headers $dummy | \
++ 			  grep ld.so.1 > /dev/null
++ 			if test "$?" = 0 ; then
++ 				LIBC="libc1"
++ 			fi
++ 		fi
++ 		rm -f $dummy.s $dummy
++ 		echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC} ; exit 0
++ 	elif test "${UNAME_MACHINE}" = "mips" ; then
++ 	  cat >$dummy.c <<EOF
++ #ifdef __cplusplus
++ #include <stdio.h>  /* for printf() prototype */
++ 	int main (int argc, char *argv[]) {
++ #else
++ 	int main (argc, argv) int argc; char *argv[]; {
++ #endif
++ #ifdef __MIPSEB__
++   printf ("%s-unknown-linux-gnu\n", argv[1]);
++ #endif
++ #ifdef __MIPSEL__
++   printf ("%sel-unknown-linux-gnu\n", argv[1]);
++ #endif
++   return 0;
++ }
++ EOF
++ 	  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy "${UNAME_MACHINE}" && rm $dummy.c $dummy && exit 0
++ 	  rm -f $dummy.c $dummy
++ 	elif test "${UNAME_MACHINE}" = "s390"; then
++ 	  echo s390-ibm-linux && exit 0
++ 	elif test "${UNAME_MACHINE}" = "x86_64"; then
++ 	  echo x86_64-unknown-linux-gnu && exit 0
++ 	elif test "${UNAME_MACHINE}" = "parisc" -o "${UNAME_MACHINE}" = "hppa"; then
++ 	  # Look for CPU level
++ 	  case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
++ 	    PA7*)
++ 		echo hppa1.1-unknown-linux-gnu
++ 		;;
++ 	    PA8*)
++ 		echo hppa2.0-unknown-linux-gnu
++ 		;;
++ 	    *)
++ 		echo hppa-unknown-linux-gnu
++ 		;;
++ 	  esac
++ 	  exit 0
++ 	else
++ 	  # Either a pre-BFD a.out linker (linux-gnuoldld)
++ 	  # or one that does not give us useful --help.
++ 	  # GCC wants to distinguish between linux-gnuoldld and linux-gnuaout.
++ 	  # If ld does not provide *any* "supported emulations:"
++ 	  # that means it is gnuoldld.
++ 	  test -z "$ld_supported_emulations" \
++ 	    && echo "${UNAME_MACHINE}-pc-linux-gnuoldld" && exit 0
++ 
++ 	  case "${UNAME_MACHINE}" in
++ 	  i?86)
++ 	    VENDOR=pc;
++ 	    ;;
++ 	  *)
++ 	    VENDOR=unknown;
++ 	    ;;
++ 	  esac
++ 	  # Determine whether the default compiler is a.out or elf
++ 	  cat >$dummy.c <<EOF
++ #include <features.h>
++ #ifdef __cplusplus
++ #include <stdio.h>  /* for printf() prototype */
++ 	int main (int argc, char *argv[]) {
++ #else
++ 	int main (argc, argv) int argc; char *argv[]; {
++ #endif
++ #ifdef __ELF__
++ # ifdef __GLIBC__
++ #  if __GLIBC__ >= 2
++     printf ("%s-${VENDOR}-linux-gnu\n", argv[1]);
++ #  else
++     printf ("%s-${VENDOR}-linux-gnulibc1\n", argv[1]);
++ #  endif
++ # else
++    printf ("%s-${VENDOR}-linux-gnulibc1\n", argv[1]);
++ # endif
++ #else
++   printf ("%s-${VENDOR}-linux-gnuaout\n", argv[1]);
++ #endif
++   return 0;
++ }
++ EOF
++ 	  $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy "${UNAME_MACHINE}" && rm $dummy.c $dummy && exit 0
++ 	  rm -f $dummy.c $dummy
++ 	  test x"${TENTATIVE}" != x && echo "${TENTATIVE}" && exit 0
++ 	fi ;;
++ # ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions
++ # are messed up and put the nodename in both sysname and nodename.
++     i?86:DYNIX/ptx:4*:*)
++ 	echo i386-sequent-sysv4
++ 	exit 0 ;;
++     i?86:UNIX_SV:4.2MP:2.*)
++         # Unixware is an offshoot of SVR4, but it has its own version
++         # number series starting with 2...
++         # I am not positive that other SVR4 systems won't match this,
++ 	# I just have to hope.  -- rms.
++         # Use sysv4.2uw... so that sysv4* matches it.
++ 	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
++ 	exit 0 ;;
++     i?86:*:4.*:* | i?86:SYSTEM_V:4.*:*)
++ 	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
++ 	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
++ 		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
++ 	else
++ 		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
++ 	fi
++ 	exit 0 ;;
++     i?86:*:5:7*)
++         # Fixed at (any) Pentium or better
++         UNAME_MACHINE=i586
++         if [ ${UNAME_SYSTEM} = "UnixWare" ] ; then
++ 	    echo ${UNAME_MACHINE}-sco-sysv${UNAME_RELEASE}uw${UNAME_VERSION}
++ 	else
++ 	    echo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}
++ 	fi
++ 	exit 0 ;;
++     i?86:*:3.2:*)
++ 	if test -f /usr/options/cb.name; then
++ 		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
++ 		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
++ 	elif /bin/uname -X 2>/dev/null >/dev/null ; then
++ 		UNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`
++ 		(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486
++ 		(/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \
++ 			&& UNAME_MACHINE=i586
++ 		(/bin/uname -X|egrep '^Machine.*Pent ?II' >/dev/null) \
++ 			&& UNAME_MACHINE=i686
++ 		(/bin/uname -X|egrep '^Machine.*Pentium Pro' >/dev/null) \
++ 			&& UNAME_MACHINE=i686
++ 		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
++ 	else
++ 		echo ${UNAME_MACHINE}-pc-sysv32
++ 	fi
++ 	exit 0 ;;
++     i?86:*DOS:*:*)
++ 	echo ${UNAME_MACHINE}-pc-msdosdjgpp
++ 	exit 0 ;;
++     pc:*:*:*)
++ 	# Left here for compatibility:
++         # uname -m prints for DJGPP always 'pc', but it prints nothing about
++         # the processor, so we play safe by assuming i386.
++ 	echo i386-pc-msdosdjgpp
++         exit 0 ;;
++     Intel:Mach:3*:*)
++ 	echo i386-pc-mach3
++ 	exit 0 ;;
++     paragon:*:*:*)
++ 	echo i860-intel-osf1
++ 	exit 0 ;;
++     i860:*:4.*:*) # i860-SVR4
++ 	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
++ 	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
++ 	else # Add other i860-SVR4 vendors below as they are discovered.
++ 	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
++ 	fi
++ 	exit 0 ;;
++     mini*:CTIX:SYS*5:*)
++ 	# "miniframe"
++ 	echo m68010-convergent-sysv
++ 	exit 0 ;;
++     M68*:*:R3V[567]*:*)
++ 	test -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;
++     3[34]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 4850:*:4.0:3.0)
++ 	OS_REL=''
++ 	test -r /etc/.relid \
++ 	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
++ 	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
++ 	  && echo i486-ncr-sysv4.3${OS_REL} && exit 0
++ 	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
++ 	  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;
++     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
++         /bin/uname -p 2>/dev/null | grep 86 >/dev/null \
++           && echo i486-ncr-sysv4 && exit 0 ;;
++     m68*:LynxOS:2.*:*)
++ 	echo m68k-unknown-lynxos${UNAME_RELEASE}
++ 	exit 0 ;;
++     mc68030:UNIX_System_V:4.*:*)
++ 	echo m68k-atari-sysv4
++ 	exit 0 ;;
++     i?86:LynxOS:2.*:* | i?86:LynxOS:3.[01]*:*)
++ 	echo i386-unknown-lynxos${UNAME_RELEASE}
++ 	exit 0 ;;
++     TSUNAMI:LynxOS:2.*:*)
++ 	echo sparc-unknown-lynxos${UNAME_RELEASE}
++ 	exit 0 ;;
++     rs6000:LynxOS:2.*:* | PowerPC:LynxOS:2.*:*)
++ 	echo rs6000-unknown-lynxos${UNAME_RELEASE}
++ 	exit 0 ;;
++     SM[BE]S:UNIX_SV:*:*)
++ 	echo mips-dde-sysv${UNAME_RELEASE}
++ 	exit 0 ;;
++     RM*:ReliantUNIX-*:*:*)
++ 	echo mips-sni-sysv4
++ 	exit 0 ;;
++     RM*:SINIX-*:*:*)
++ 	echo mips-sni-sysv4
++ 	exit 0 ;;
++     *:SINIX-*:*:*)
++ 	if uname -p 2>/dev/null >/dev/null ; then
++ 		UNAME_MACHINE=`(uname -p) 2>/dev/null`
++ 		echo ${UNAME_MACHINE}-sni-sysv4
++ 	else
++ 		echo ns32k-sni-sysv
++ 	fi
++ 	exit 0 ;;
++     PENTIUM:CPunix:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort
++                            # says <Richard.M.Bartel@ccMail.Census.GOV>
++         echo i586-unisys-sysv4
++         exit 0 ;;
++     *:UNIX_System_V:4*:FTX*)
++ 	# From Gerald Hewes <hewes@openmarket.com>.
++ 	# How about differentiating between stratus architectures? -djm
++ 	echo hppa1.1-stratus-sysv4
++ 	exit 0 ;;
++     *:*:*:FTX*)
++ 	# From seanf@swdc.stratus.com.
++ 	echo i860-stratus-sysv4
++ 	exit 0 ;;
++     mc68*:A/UX:*:*)
++ 	echo m68k-apple-aux${UNAME_RELEASE}
++ 	exit 0 ;;
++     news*:NEWS-OS:6*:*)
++ 	echo mips-sony-newsos6
++ 	exit 0 ;;
++     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
++ 	if [ -d /usr/nec ]; then
++ 	        echo mips-nec-sysv${UNAME_RELEASE}
++ 	else
++ 	        echo mips-unknown-sysv${UNAME_RELEASE}
++ 	fi
++         exit 0 ;;
++     BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
++ 	echo powerpc-be-beos
++ 	exit 0 ;;
++     BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
++ 	echo powerpc-apple-beos
++ 	exit 0 ;;
++     BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
++ 	echo i586-pc-beos
++ 	exit 0 ;;
++     SX-4:SUPER-UX:*:*)
++ 	echo sx4-nec-superux${UNAME_RELEASE}
++ 	exit 0 ;;
++     SX-5:SUPER-UX:*:*)
++ 	echo sx5-nec-superux${UNAME_RELEASE}
++ 	exit 0 ;;
++     Power*:Rhapsody:*:*)
++ 	echo powerpc-apple-rhapsody${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:Rhapsody:*:*)
++ 	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:Darwin:*:*)
++ 	echo `uname -p`-apple-darwin${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:procnto*:*:* | *:QNX:[0123456789]*:*)
++ 	if test "${UNAME_MACHINE}" = "x86pc"; then
++ 		UNAME_MACHINE=pc
++ 	fi
++ 	echo `uname -p`-${UNAME_MACHINE}-nto-qnx
++ 	exit 0 ;;
++     *:QNX:*:4*)
++ 	echo i386-pc-qnx
++ 	exit 0 ;;
++     NSR-[KW]:NONSTOP_KERNEL:*:*)
++ 	echo nsr-tandem-nsk${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:NonStop-UX:*:*)
++ 	echo mips-compaq-nonstopux
++ 	exit 0 ;;
++     BS2000:POSIX*:*:*)
++ 	echo bs2000-siemens-sysv
++ 	exit 0 ;;
++     DS/*:UNIX_System_V:*:*)
++ 	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
++ 	exit 0 ;;
++     *:Plan9:*:*)
++ 	# "uname -m" is not consistent, so use $cputype instead. 386
++ 	# is converted to i386 for consistency with other x86
++ 	# operating systems.
++ 	if test "$cputype" = "386"; then
++ 	    UNAME_MACHINE=i386
++ 	else
++ 	    UNAME_MACHINE="$cputype"
++ 	fi
++ 	echo ${UNAME_MACHINE}-unknown-plan9
++ 	exit 0 ;;
++     i?86:OS/2:*:*)
++ 	# If we were able to find `uname', then EMX Unix compatibility
++ 	# is probably installed.
++ 	echo ${UNAME_MACHINE}-pc-os2-emx
++ 	exit 0 ;;
++ esac
++ 
++ #echo '(No uname command or uname output not recognized.)' 1>&2
++ #echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2
++ 
++ cat >$dummy.c <<EOF
++ #ifdef _SEQUENT_
++ # include <sys/types.h>
++ # include <sys/utsname.h>
++ #endif
++ main ()
++ {
++ #if defined (sony)
++ #if defined (MIPSEB)
++   /* BFD wants "bsd" instead of "newsos".  Perhaps BFD should be changed,
++      I don't know....  */
++   printf ("mips-sony-bsd\n"); exit (0);
++ #else
++ #include <sys/param.h>
++   printf ("m68k-sony-newsos%s\n",
++ #ifdef NEWSOS4
++           "4"
++ #else
++ 	  ""
++ #endif
++          ); exit (0);
++ #endif
++ #endif
++ 
++ #if defined (__arm) && defined (__acorn) && defined (__unix)
++   printf ("arm-acorn-riscix"); exit (0);
++ #endif
++ 
++ #if defined (hp300) && !defined (hpux)
++   printf ("m68k-hp-bsd\n"); exit (0);
++ #endif
++ 
++ #if defined (NeXT)
++ #if !defined (__ARCHITECTURE__)
++ #define __ARCHITECTURE__ "m68k"
++ #endif
++   int version;
++   version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
++   if (version < 4)
++     printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
++   else
++     printf ("%s-next-openstep%d\n", __ARCHITECTURE__, version);
++   exit (0);
++ #endif
++ 
++ #if defined (MULTIMAX) || defined (n16)
++ #if defined (UMAXV)
++   printf ("ns32k-encore-sysv\n"); exit (0);
++ #else
++ #if defined (CMU)
++   printf ("ns32k-encore-mach\n"); exit (0);
++ #else
++   printf ("ns32k-encore-bsd\n"); exit (0);
++ #endif
++ #endif
++ #endif
++ 
++ #if defined (__386BSD__)
++   printf ("i386-pc-bsd\n"); exit (0);
++ #endif
++ 
++ #if defined (sequent)
++ #if defined (i386)
++   printf ("i386-sequent-dynix\n"); exit (0);
++ #endif
++ #if defined (ns32000)
++   printf ("ns32k-sequent-dynix\n"); exit (0);
++ #endif
++ #endif
++ 
++ #if defined (_SEQUENT_)
++     struct utsname un;
++ 
++     uname(&un);
++ 
++     if (strncmp(un.version, "V2", 2) == 0) {
++ 	printf ("i386-sequent-ptx2\n"); exit (0);
++     }
++     if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
++ 	printf ("i386-sequent-ptx1\n"); exit (0);
++     }
++     printf ("i386-sequent-ptx\n"); exit (0);
++ 
++ #endif
++ 
++ #if defined (vax)
++ #if !defined (ultrix)
++   printf ("vax-dec-bsd\n"); exit (0);
++ #else
++   printf ("vax-dec-ultrix\n"); exit (0);
++ #endif
++ #endif
++ 
++ #if defined (alliant) && defined (i860)
++   printf ("i860-alliant-bsd\n"); exit (0);
++ #endif
++ 
++   exit (1);
++ }
++ EOF
++ 
++ $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && ./$dummy && rm $dummy.c $dummy && exit 0
++ rm -f $dummy.c $dummy
++ 
++ # Apollos put the system type in the environment.
++ 
++ test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }
++ 
++ # Convex versions that predate uname can use getsysinfo(1)
++ 
++ if [ -x /usr/convex/getsysinfo ]
++ then
++     case `getsysinfo -f cpu_type` in
++     c1*)
++ 	echo c1-convex-bsd
++ 	exit 0 ;;
++     c2*)
++ 	if getsysinfo -f scalar_acc
++ 	then echo c32-convex-bsd
++ 	else echo c2-convex-bsd
++ 	fi
++ 	exit 0 ;;
++     c34*)
++ 	echo c34-convex-bsd
++ 	exit 0 ;;
++     c38*)
++ 	echo c38-convex-bsd
++ 	exit 0 ;;
++     c4*)
++ 	echo c4-convex-bsd
++ 	exit 0 ;;
++     esac
++ fi
++ 
++ cat >&2 <<EOF
++ $0: unable to guess system type
++ 
++ The $version version of this script cannot recognize your system type.
++ Please download the most up to date version of the config scripts:
++ 
++     ftp://ftp.gnu.org/pub/gnu/config/
++ 
++ If the version you run ($0) is already up to date, please
++ send the following data and any information you think might be
++ pertinent to <config-patches@gnu.org> in order to provide the needed
++ information to handle your system.
++ 
++ config.guess version = $version
++ 
++ uname -m = `(uname -m) 2>/dev/null || echo unknown`
++ uname -r = `(uname -r) 2>/dev/null || echo unknown`
++ uname -s = `(uname -s) 2>/dev/null || echo unknown`
++ uname -v = `(uname -v) 2>/dev/null || echo unknown`
++ 
++ /usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
++ /bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
++ 
++ hostinfo               = `(hostinfo) 2>/dev/null`
++ /bin/universe          = `(/bin/universe) 2>/dev/null`
++ /usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
++ /bin/arch              = `(/bin/arch) 2>/dev/null`
++ /usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
++ /usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
++ 
++ UNAME_MACHINE = ${UNAME_MACHINE}
++ UNAME_RELEASE = ${UNAME_RELEASE}
++ UNAME_SYSTEM  = ${UNAME_SYSTEM}
++ UNAME_VERSION = ${UNAME_VERSION}
++ EOF
++ 
++ exit 1
++ 
++ # Local variables:
++ # eval: (add-hook 'write-file-hooks 'time-stamp)
++ # time-stamp-start: "timestamp='"
++ # time-stamp-format: "%:y-%02m-%02d"
++ # time-stamp-end: "'"
++ # End:
diff -Naur libnids-1.21/config.sub.rej libnids-1.21_patched/config.sub.rej
--- libnids-1.21/config.sub.rej	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/config.sub.rej	2010-03-27 20:18:45.197655947 +0100
@@ -0,0 +1,1349 @@
+***************
+*** 0 ****
+--- 1,1346 ----
++ #! /bin/sh
++ # Configuration validation subroutine script.
++ #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
++ #   Free Software Foundation, Inc.
++ 
++ timestamp='2000-12-15'
++ 
++ # This file is (in principle) common to ALL GNU software.
++ # The presence of a machine in this file suggests that SOME GNU software
++ # can handle that machine.  It does not imply ALL GNU software can.
++ #
++ # This file is free software; you can redistribute it and/or modify
++ # it under the terms of the GNU General Public License as published by
++ # the Free Software Foundation; either version 2 of the License, or
++ # (at your option) any later version.
++ #
++ # This program is distributed in the hope that it will be useful,
++ # but WITHOUT ANY WARRANTY; without even the implied warranty of
++ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
++ # GNU General Public License for more details.
++ #
++ # You should have received a copy of the GNU General Public License
++ # along with this program; if not, write to the Free Software
++ # Foundation, Inc., 59 Temple Place - Suite 330,
++ # Boston, MA 02111-1307, USA.
++ 
++ # As a special exception to the GNU General Public License, if you
++ # distribute this file as part of a program that contains a
++ # configuration script generated by Autoconf, you may include it under
++ # the same distribution terms that you use for the rest of that program.
++ 
++ # Please send patches to <config-patches@gnu.org>.
++ #
++ # Configuration subroutine to validate and canonicalize a configuration type.
++ # Supply the specified configuration type as an argument.
++ # If it is invalid, we print an error message on stderr and exit with code 1.
++ # Otherwise, we print the canonical config type on stdout and succeed.
++ 
++ # This file is supposed to be the same for all GNU packages
++ # and recognize all the CPU types, system types and aliases
++ # that are meaningful with *any* GNU software.
++ # Each package is responsible for reporting which valid configurations
++ # it does not support.  The user should be able to distinguish
++ # a failure to support a valid configuration from a meaningless
++ # configuration.
++ 
++ # The goal of this file is to map all the various variations of a given
++ # machine specification into a single specification in the form:
++ #	CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM
++ # or in some cases, the newer four-part form:
++ #	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
++ # It is wrong to echo any other type of specification.
++ 
++ me=`echo "$0" | sed -e 's,.*/,,'`
++ 
++ usage="\
++ Usage: $0 [OPTION] CPU-MFR-OPSYS
++        $0 [OPTION] ALIAS
++ 
++ Canonicalize a configuration name.
++ 
++ Operation modes:
++   -h, --help         print this help, then exit
++   -t, --time-stamp   print date of last modification, then exit
++   -v, --version      print version number, then exit
++ 
++ Report bugs and patches to <config-patches@gnu.org>."
++ 
++ version="\
++ GNU config.sub ($timestamp)
++ 
++ Copyright (C) 1992, 93, 94, 95, 96, 97, 98, 99, 2000
++ Free Software Foundation, Inc.
++ 
++ This is free software; see the source for copying conditions.  There is NO
++ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
++ 
++ help="
++ Try \`$me --help' for more information."
++ 
++ # Parse command line
++ while test $# -gt 0 ; do
++   case $1 in
++     --time-stamp | --time* | -t )
++        echo "$timestamp" ; exit 0 ;;
++     --version | -v )
++        echo "$version" ; exit 0 ;;
++     --help | --h* | -h )
++        echo "$usage"; exit 0 ;;
++     -- )     # Stop option processing
++        shift; break ;;
++     - )	# Use stdin as input.
++        break ;;
++     -* )
++        echo "$me: invalid option $1$help"
++        exit 1 ;;
++ 
++     *local*)
++        # First pass through any local machine types.
++        echo $1
++        exit 0;;
++ 
++     * )
++        break ;;
++   esac
++ done
++ 
++ case $# in
++  0) echo "$me: missing argument$help" >&2
++     exit 1;;
++  1) ;;
++  *) echo "$me: too many arguments$help" >&2
++     exit 1;;
++ esac
++ 
++ # Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
++ # Here we must recognize all the valid KERNEL-OS combinations.
++ maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
++ case $maybe_os in
++   nto-qnx* | linux-gnu* | storm-chaos*)
++     os=-$maybe_os
++     basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
++     ;;
++   *)
++     basic_machine=`echo $1 | sed 's/-[^-]*$//'`
++     if [ $basic_machine != $1 ]
++     then os=`echo $1 | sed 's/.*-/-/'`
++     else os=; fi
++     ;;
++ esac
++ 
++ ### Let's recognize common machines as not being operating systems so
++ ### that things like config.sub decstation-3100 work.  We also
++ ### recognize some manufacturers as not being operating systems, so we
++ ### can provide default operating systems below.
++ case $os in
++ 	-sun*os*)
++ 		# Prevent following clause from handling this invalid input.
++ 		;;
++ 	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
++ 	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
++ 	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
++ 	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
++ 	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
++ 	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
++ 	-apple | -axis)
++ 		os=
++ 		basic_machine=$1
++ 		;;
++ 	-sim | -cisco | -oki | -wec | -winbond)
++ 		os=
++ 		basic_machine=$1
++ 		;;
++ 	-scout)
++ 		;;
++ 	-wrs)
++ 		os=-vxworks
++ 		basic_machine=$1
++ 		;;
++ 	-hiux*)
++ 		os=-hiuxwe2
++ 		;;
++ 	-sco5)
++ 		os=-sco3.2v5
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-sco4)
++ 		os=-sco3.2v4
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-sco3.2.[4-9]*)
++ 		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-sco3.2v[4-9]*)
++ 		# Don't forget version if it is 3.2v4 or newer.
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-sco*)
++ 		os=-sco3.2v2
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-udk*)
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-isc)
++ 		os=-isc2.2
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-clix*)
++ 		basic_machine=clipper-intergraph
++ 		;;
++ 	-isc*)
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
++ 		;;
++ 	-lynx*)
++ 		os=-lynxos
++ 		;;
++ 	-ptx*)
++ 		basic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`
++ 		;;
++ 	-windowsnt*)
++ 		os=`echo $os | sed -e 's/windowsnt/winnt/'`
++ 		;;
++ 	-psos*)
++ 		os=-psos
++ 		;;
++ 	-mint | -mint[0-9]*)
++ 		basic_machine=m68k-atari
++ 		os=-mint
++ 		;;
++ esac
++ 
++ # Decode aliases for certain CPU-COMPANY combinations.
++ case $basic_machine in
++ 	# Recognize the basic CPU types without company name.
++ 	# Some are omitted here because they have special meanings below.
++ 	tahoe | i860 | ia64 | m32r | m68k | m68000 | m88k | ns32k | arc \
++ 	        | arm | arme[lb] | arm[bl]e | armv[2345] | armv[345][lb] | strongarm | xscale \
++ 		| pyramid | mn10200 | mn10300 | tron | a29k \
++ 		| 580 | i960 | h8300 \
++ 		| x86 | ppcbe | mipsbe | mipsle | shbe | shle \
++ 		| hppa | hppa1.0 | hppa1.1 | hppa2.0 | hppa2.0w | hppa2.0n \
++ 		| hppa64 \
++ 		| alpha | alphaev[4-8] | alphaev56 | alphapca5[67] \
++ 		| alphaev6[78] \
++ 		| we32k | ns16k | clipper | i370 | sh | sh[34] \
++ 		| powerpc | powerpcle \
++ 		| 1750a | dsp16xx | pdp11 | mips16 | mips64 | mipsel | mips64el \
++ 		| mips64orion | mips64orionel | mipstx39 | mipstx39el \
++ 		| mips64vr4300 | mips64vr4300el | mips64vr4100 | mips64vr4100el \
++ 		| mips64vr5000 | miprs64vr5000el | mcore \
++ 		| sparc | sparclet | sparclite | sparc64 | sparcv9 | v850 | c4x \
++ 		| thumb | d10v | d30v | fr30 | avr)
++ 		basic_machine=$basic_machine-unknown
++ 		;;
++ 	m6811 | m68hc11 | m6812 | m68hc12)
++ 		# Motorola 68HC11/12.
++ 		basic_machine=$basic_machine-unknown
++ 		os=-none
++ 		;;
++ 	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | z8k | v70 | h8500 | w65 | pj | pjl)
++ 		;;
++ 
++ 	# We use `pc' rather than `unknown'
++ 	# because (1) that's what they normally are, and
++ 	# (2) the word "unknown" tends to confuse beginning users.
++ 	i[234567]86 | x86_64)
++ 	  basic_machine=$basic_machine-pc
++ 	  ;;
++ 	# Object if more than one company name word.
++ 	*-*-*)
++ 		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
++ 		exit 1
++ 		;;
++ 	# Recognize the basic CPU types with company name.
++ 	# FIXME: clean up the formatting here.
++ 	vax-* | tahoe-* | i[234567]86-* | i860-* | ia64-* | m32r-* | m68k-* | m68000-* \
++ 	      | m88k-* | sparc-* | ns32k-* | fx80-* | arc-* | c[123]* \
++ 	      | arm-*  | armbe-* | armle-* | armv*-* | strongarm-* | xscale-* \
++ 	      | mips-* | pyramid-* | tron-* | a29k-* | romp-* | rs6000-* \
++ 	      | power-* | none-* | 580-* | cray2-* | h8300-* | h8500-* | i960-* \
++ 	      | xmp-* | ymp-* \
++ 	      | x86-* | ppcbe-* | mipsbe-* | mipsle-* | shbe-* | shle-* \
++ 	      | hppa-* | hppa1.0-* | hppa1.1-* | hppa2.0-* | hppa2.0w-* \
++ 	      | hppa2.0n-* | hppa64-* \
++ 	      | alpha-* | alphaev[4-8]-* | alphaev56-* | alphapca5[67]-* \
++ 	      | alphaev6[78]-* \
++ 	      | we32k-* | cydra-* | ns16k-* | pn-* | np1-* | xps100-* \
++ 	      | clipper-* | orion-* \
++ 	      | sparclite-* | pdp11-* | sh-* | powerpc-* | powerpcle-* \
++ 	      | sparc64-* | sparcv9-* | sparc86x-* | mips16-* | mips64-* | mipsel-* \
++ 	      | mips64el-* | mips64orion-* | mips64orionel-* \
++ 	      | mips64vr4100-* | mips64vr4100el-* | mips64vr4300-* | mips64vr4300el-* \
++ 	      | mipstx39-* | mipstx39el-* | mcore-* \
++ 	      | f30[01]-* | s390-* | sv1-* | t3e-* \
++ 	      | m88110-* | m680[01234]0-* | m683?2-* | m68360-* | z8k-* | d10v-* \
++ 	      | thumb-* | v850-* | d30v-* | tic30-* | c30-* | fr30-* \
++ 	      | bs2000-* | tic54x-* | c54x-* | x86_64-*)
++ 		;;
++ 	# Recognize the various machine names and aliases which stand
++ 	# for a CPU type and a company and sometimes even an OS.
++ 	386bsd)
++ 		basic_machine=i386-unknown
++ 		os=-bsd
++ 		;;
++ 	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
++ 		basic_machine=m68000-att
++ 		;;
++ 	3b*)
++ 		basic_machine=we32k-att
++ 		;;
++ 	a29khif)
++ 		basic_machine=a29k-amd
++ 		os=-udi
++ 		;;
++ 	adobe68k)
++ 		basic_machine=m68010-adobe
++ 		os=-scout
++ 		;;
++ 	alliant | fx80)
++ 		basic_machine=fx80-alliant
++ 		;;
++ 	altos | altos3068)
++ 		basic_machine=m68k-altos
++ 		;;
++ 	am29k)
++ 		basic_machine=a29k-none
++ 		os=-bsd
++ 		;;
++ 	amdahl)
++ 		basic_machine=580-amdahl
++ 		os=-sysv
++ 		;;
++ 	amiga | amiga-*)
++ 		basic_machine=m68k-unknown
++ 		;;
++ 	amigaos | amigados)
++ 		basic_machine=m68k-unknown
++ 		os=-amigaos
++ 		;;
++ 	amigaunix | amix)
++ 		basic_machine=m68k-unknown
++ 		os=-sysv4
++ 		;;
++ 	apollo68)
++ 		basic_machine=m68k-apollo
++ 		os=-sysv
++ 		;;
++ 	apollo68bsd)
++ 		basic_machine=m68k-apollo
++ 		os=-bsd
++ 		;;
++ 	aux)
++ 		basic_machine=m68k-apple
++ 		os=-aux
++ 		;;
++ 	balance)
++ 		basic_machine=ns32k-sequent
++ 		os=-dynix
++ 		;;
++ 	convex-c1)
++ 		basic_machine=c1-convex
++ 		os=-bsd
++ 		;;
++ 	convex-c2)
++ 		basic_machine=c2-convex
++ 		os=-bsd
++ 		;;
++ 	convex-c32)
++ 		basic_machine=c32-convex
++ 		os=-bsd
++ 		;;
++ 	convex-c34)
++ 		basic_machine=c34-convex
++ 		os=-bsd
++ 		;;
++ 	convex-c38)
++ 		basic_machine=c38-convex
++ 		os=-bsd
++ 		;;
++ 	cray | ymp)
++ 		basic_machine=ymp-cray
++ 		os=-unicos
++ 		;;
++ 	cray2)
++ 		basic_machine=cray2-cray
++ 		os=-unicos
++ 		;;
++ 	[ctj]90-cray)
++ 		basic_machine=c90-cray
++ 		os=-unicos
++ 		;;
++ 	crds | unos)
++ 		basic_machine=m68k-crds
++ 		;;
++ 	cris | cris-* | etrax*)
++ 		basic_machine=cris-axis
++ 		;;
++ 	da30 | da30-*)
++ 		basic_machine=m68k-da30
++ 		;;
++ 	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
++ 		basic_machine=mips-dec
++ 		;;
++ 	delta | 3300 | motorola-3300 | motorola-delta \
++ 	      | 3300-motorola | delta-motorola)
++ 		basic_machine=m68k-motorola
++ 		;;
++ 	delta88)
++ 		basic_machine=m88k-motorola
++ 		os=-sysv3
++ 		;;
++ 	dpx20 | dpx20-*)
++ 		basic_machine=rs6000-bull
++ 		os=-bosx
++ 		;;
++ 	dpx2* | dpx2*-bull)
++ 		basic_machine=m68k-bull
++ 		os=-sysv3
++ 		;;
++ 	ebmon29k)
++ 		basic_machine=a29k-amd
++ 		os=-ebmon
++ 		;;
++ 	elxsi)
++ 		basic_machine=elxsi-elxsi
++ 		os=-bsd
++ 		;;
++ 	encore | umax | mmax)
++ 		basic_machine=ns32k-encore
++ 		;;
++ 	es1800 | OSE68k | ose68k | ose | OSE)
++ 		basic_machine=m68k-ericsson
++ 		os=-ose
++ 		;;
++ 	fx2800)
++ 		basic_machine=i860-alliant
++ 		;;
++ 	genix)
++ 		basic_machine=ns32k-ns
++ 		;;
++ 	gmicro)
++ 		basic_machine=tron-gmicro
++ 		os=-sysv
++ 		;;
++ 	h3050r* | hiux*)
++ 		basic_machine=hppa1.1-hitachi
++ 		os=-hiuxwe2
++ 		;;
++ 	h8300hms)
++ 		basic_machine=h8300-hitachi
++ 		os=-hms
++ 		;;
++ 	h8300xray)
++ 		basic_machine=h8300-hitachi
++ 		os=-xray
++ 		;;
++ 	h8500hms)
++ 		basic_machine=h8500-hitachi
++ 		os=-hms
++ 		;;
++ 	harris)
++ 		basic_machine=m88k-harris
++ 		os=-sysv3
++ 		;;
++ 	hp300-*)
++ 		basic_machine=m68k-hp
++ 		;;
++ 	hp300bsd)
++ 		basic_machine=m68k-hp
++ 		os=-bsd
++ 		;;
++ 	hp300hpux)
++ 		basic_machine=m68k-hp
++ 		os=-hpux
++ 		;;
++ 	hp3k9[0-9][0-9] | hp9[0-9][0-9])
++ 		basic_machine=hppa1.0-hp
++ 		;;
++ 	hp9k2[0-9][0-9] | hp9k31[0-9])
++ 		basic_machine=m68000-hp
++ 		;;
++ 	hp9k3[2-9][0-9])
++ 		basic_machine=m68k-hp
++ 		;;
++ 	hp9k6[0-9][0-9] | hp6[0-9][0-9])
++ 		basic_machine=hppa1.0-hp
++ 		;;
++ 	hp9k7[0-79][0-9] | hp7[0-79][0-9])
++ 		basic_machine=hppa1.1-hp
++ 		;;
++ 	hp9k78[0-9] | hp78[0-9])
++ 		# FIXME: really hppa2.0-hp
++ 		basic_machine=hppa1.1-hp
++ 		;;
++ 	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
++ 		# FIXME: really hppa2.0-hp
++ 		basic_machine=hppa1.1-hp
++ 		;;
++ 	hp9k8[0-9][13679] | hp8[0-9][13679])
++ 		basic_machine=hppa1.1-hp
++ 		;;
++ 	hp9k8[0-9][0-9] | hp8[0-9][0-9])
++ 		basic_machine=hppa1.0-hp
++ 		;;
++ 	hppa-next)
++ 		os=-nextstep3
++ 		;;
++ 	hppaosf)
++ 		basic_machine=hppa1.1-hp
++ 		os=-osf
++ 		;;
++ 	hppro)
++ 		basic_machine=hppa1.1-hp
++ 		os=-proelf
++ 		;;
++ 	i370-ibm* | ibm*)
++ 		basic_machine=i370-ibm
++ 		;;
++ # I'm not sure what "Sysv32" means.  Should this be sysv3.2?
++ 	i[34567]86v32)
++ 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
++ 		os=-sysv32
++ 		;;
++ 	i[34567]86v4*)
++ 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
++ 		os=-sysv4
++ 		;;
++ 	i[34567]86v)
++ 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
++ 		os=-sysv
++ 		;;
++ 	i[34567]86sol2)
++ 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
++ 		os=-solaris2
++ 		;;
++ 	i386mach)
++ 		basic_machine=i386-mach
++ 		os=-mach
++ 		;;
++ 	i386-vsta | vsta)
++ 		basic_machine=i386-unknown
++ 		os=-vsta
++ 		;;
++ 	i386-go32 | go32)
++ 		basic_machine=i386-unknown
++ 		os=-go32
++ 		;;
++ 	i386-mingw32 | mingw32)
++ 		basic_machine=i386-unknown
++ 		os=-mingw32
++ 		;;
++ 	i[34567]86-pw32 | pw32)
++ 		basic_machine=i586-unknown
++ 		os=-pw32
++ 		;;
++ 	iris | iris4d)
++ 		basic_machine=mips-sgi
++ 		case $os in
++ 		    -irix*)
++ 			;;
++ 		    *)
++ 			os=-irix4
++ 			;;
++ 		esac
++ 		;;
++ 	isi68 | isi)
++ 		basic_machine=m68k-isi
++ 		os=-sysv
++ 		;;
++ 	m88k-omron*)
++ 		basic_machine=m88k-omron
++ 		;;
++ 	magnum | m3230)
++ 		basic_machine=mips-mips
++ 		os=-sysv
++ 		;;
++ 	merlin)
++ 		basic_machine=ns32k-utek
++ 		os=-sysv
++ 		;;
++ 	miniframe)
++ 		basic_machine=m68000-convergent
++ 		;;
++ 	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
++ 		basic_machine=m68k-atari
++ 		os=-mint
++ 		;;
++ 	mipsel*-linux*)
++ 		basic_machine=mipsel-unknown
++ 		os=-linux-gnu
++ 		;;
++ 	mips*-linux*)
++ 		basic_machine=mips-unknown
++ 		os=-linux-gnu
++ 		;;
++ 	mips3*-*)
++ 		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
++ 		;;
++ 	mips3*)
++ 		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
++ 		;;
++ 	mmix*)
++ 		basic_machine=mmix-knuth
++ 		os=-mmixware
++ 		;;
++ 	monitor)
++ 		basic_machine=m68k-rom68k
++ 		os=-coff
++ 		;;
++ 	msdos)
++ 		basic_machine=i386-unknown
++ 		os=-msdos
++ 		;;
++ 	mvs)
++ 		basic_machine=i370-ibm
++ 		os=-mvs
++ 		;;
++ 	ncr3000)
++ 		basic_machine=i486-ncr
++ 		os=-sysv4
++ 		;;
++ 	netbsd386)
++ 		basic_machine=i386-unknown
++ 		os=-netbsd
++ 		;;
++ 	netwinder)
++ 		basic_machine=armv4l-rebel
++ 		os=-linux
++ 		;;
++ 	news | news700 | news800 | news900)
++ 		basic_machine=m68k-sony
++ 		os=-newsos
++ 		;;
++ 	news1000)
++ 		basic_machine=m68030-sony
++ 		os=-newsos
++ 		;;
++ 	news-3600 | risc-news)
++ 		basic_machine=mips-sony
++ 		os=-newsos
++ 		;;
++ 	necv70)
++ 		basic_machine=v70-nec
++ 		os=-sysv
++ 		;;
++ 	next | m*-next )
++ 		basic_machine=m68k-next
++ 		case $os in
++ 		    -nextstep* )
++ 			;;
++ 		    -ns2*)
++ 		      os=-nextstep2
++ 			;;
++ 		    *)
++ 		      os=-nextstep3
++ 			;;
++ 		esac
++ 		;;
++ 	nh3000)
++ 		basic_machine=m68k-harris
++ 		os=-cxux
++ 		;;
++ 	nh[45]000)
++ 		basic_machine=m88k-harris
++ 		os=-cxux
++ 		;;
++ 	nindy960)
++ 		basic_machine=i960-intel
++ 		os=-nindy
++ 		;;
++ 	mon960)
++ 		basic_machine=i960-intel
++ 		os=-mon960
++ 		;;
++ 	nonstopux)
++ 		basic_machine=mips-compaq
++ 		os=-nonstopux
++ 		;;
++ 	np1)
++ 		basic_machine=np1-gould
++ 		;;
++ 	nsr-tandem)
++ 		basic_machine=nsr-tandem
++ 		;;
++ 	op50n-* | op60c-*)
++ 		basic_machine=hppa1.1-oki
++ 		os=-proelf
++ 		;;
++ 	OSE68000 | ose68000)
++ 		basic_machine=m68000-ericsson
++ 		os=-ose
++ 		;;
++ 	os68k)
++ 		basic_machine=m68k-none
++ 		os=-os68k
++ 		;;
++ 	pa-hitachi)
++ 		basic_machine=hppa1.1-hitachi
++ 		os=-hiuxwe2
++ 		;;
++ 	paragon)
++ 		basic_machine=i860-intel
++ 		os=-osf
++ 		;;
++ 	pbd)
++ 		basic_machine=sparc-tti
++ 		;;
++ 	pbb)
++ 		basic_machine=m68k-tti
++ 		;;
++         pc532 | pc532-*)
++ 		basic_machine=ns32k-pc532
++ 		;;
++ 	pentium | p5 | k5 | k6 | nexgen)
++ 		basic_machine=i586-pc
++ 		;;
++ 	pentiumpro | p6 | 6x86 | athlon)
++ 		basic_machine=i686-pc
++ 		;;
++ 	pentiumii | pentium2)
++ 		basic_machine=i686-pc
++ 		;;
++ 	pentium-* | p5-* | k5-* | k6-* | nexgen-*)
++ 		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
++ 		;;
++ 	pentiumpro-* | p6-* | 6x86-* | athlon-*)
++ 		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
++ 		;;
++ 	pentiumii-* | pentium2-*)
++ 		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
++ 		;;
++ 	pn)
++ 		basic_machine=pn-gould
++ 		;;
++ 	power)	basic_machine=power-ibm
++ 		;;
++ 	ppc)	basic_machine=powerpc-unknown
++ 	        ;;
++ 	ppc-*)	basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
++ 		;;
++ 	ppcle | powerpclittle | ppc-le | powerpc-little)
++ 		basic_machine=powerpcle-unknown
++ 	        ;;
++ 	ppcle-* | powerpclittle-*)
++ 		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
++ 		;;
++ 	ps2)
++ 		basic_machine=i386-ibm
++ 		;;
++ 	rom68k)
++ 		basic_machine=m68k-rom68k
++ 		os=-coff
++ 		;;
++ 	rm[46]00)
++ 		basic_machine=mips-siemens
++ 		;;
++ 	rtpc | rtpc-*)
++ 		basic_machine=romp-ibm
++ 		;;
++ 	sa29200)
++ 		basic_machine=a29k-amd
++ 		os=-udi
++ 		;;
++ 	sequent)
++ 		basic_machine=i386-sequent
++ 		;;
++ 	sh)
++ 		basic_machine=sh-hitachi
++ 		os=-hms
++ 		;;
++ 	sparclite-wrs)
++ 		basic_machine=sparclite-wrs
++ 		os=-vxworks
++ 		;;
++ 	sps7)
++ 		basic_machine=m68k-bull
++ 		os=-sysv2
++ 		;;
++ 	spur)
++ 		basic_machine=spur-unknown
++ 		;;
++ 	st2000)
++ 		basic_machine=m68k-tandem
++ 		;;
++ 	stratus)
++ 		basic_machine=i860-stratus
++ 		os=-sysv4
++ 		;;
++ 	sun2)
++ 		basic_machine=m68000-sun
++ 		;;
++ 	sun2os3)
++ 		basic_machine=m68000-sun
++ 		os=-sunos3
++ 		;;
++ 	sun2os4)
++ 		basic_machine=m68000-sun
++ 		os=-sunos4
++ 		;;
++ 	sun3os3)
++ 		basic_machine=m68k-sun
++ 		os=-sunos3
++ 		;;
++ 	sun3os4)
++ 		basic_machine=m68k-sun
++ 		os=-sunos4
++ 		;;
++ 	sun4os3)
++ 		basic_machine=sparc-sun
++ 		os=-sunos3
++ 		;;
++ 	sun4os4)
++ 		basic_machine=sparc-sun
++ 		os=-sunos4
++ 		;;
++ 	sun4sol2)
++ 		basic_machine=sparc-sun
++ 		os=-solaris2
++ 		;;
++ 	sun3 | sun3-*)
++ 		basic_machine=m68k-sun
++ 		;;
++ 	sun4)
++ 		basic_machine=sparc-sun
++ 		;;
++ 	sun386 | sun386i | roadrunner)
++ 		basic_machine=i386-sun
++ 		;;
++ 	sv1)
++ 		basic_machine=sv1-cray
++ 		os=-unicos
++ 		;;
++ 	symmetry)
++ 		basic_machine=i386-sequent
++ 		os=-dynix
++ 		;;
++ 	t3e)
++ 		basic_machine=t3e-cray
++ 		os=-unicos
++ 		;;
++ 	tic54x | c54x*)
++ 		basic_machine=tic54x-unknown
++ 		os=-coff
++ 		;;
++ 	tx39)
++ 		basic_machine=mipstx39-unknown
++ 		;;
++ 	tx39el)
++ 		basic_machine=mipstx39el-unknown
++ 		;;
++ 	tower | tower-32)
++ 		basic_machine=m68k-ncr
++ 		;;
++ 	udi29k)
++ 		basic_machine=a29k-amd
++ 		os=-udi
++ 		;;
++ 	ultra3)
++ 		basic_machine=a29k-nyu
++ 		os=-sym1
++ 		;;
++ 	v810 | necv810)
++ 		basic_machine=v810-nec
++ 		os=-none
++ 		;;
++ 	vaxv)
++ 		basic_machine=vax-dec
++ 		os=-sysv
++ 		;;
++ 	vms)
++ 		basic_machine=vax-dec
++ 		os=-vms
++ 		;;
++ 	vpp*|vx|vx-*)
++                basic_machine=f301-fujitsu
++                ;;
++ 	vxworks960)
++ 		basic_machine=i960-wrs
++ 		os=-vxworks
++ 		;;
++ 	vxworks68)
++ 		basic_machine=m68k-wrs
++ 		os=-vxworks
++ 		;;
++ 	vxworks29k)
++ 		basic_machine=a29k-wrs
++ 		os=-vxworks
++ 		;;
++ 	w65*)
++ 		basic_machine=w65-wdc
++ 		os=-none
++ 		;;
++ 	w89k-*)
++ 		basic_machine=hppa1.1-winbond
++ 		os=-proelf
++ 		;;
++ 	xmp)
++ 		basic_machine=xmp-cray
++ 		os=-unicos
++ 		;;
++         xps | xps100)
++ 		basic_machine=xps100-honeywell
++ 		;;
++ 	z8k-*-coff)
++ 		basic_machine=z8k-unknown
++ 		os=-sim
++ 		;;
++ 	none)
++ 		basic_machine=none-none
++ 		os=-none
++ 		;;
++ 
++ # Here we handle the default manufacturer of certain CPU types.  It is in
++ # some cases the only manufacturer, in others, it is the most popular.
++ 	w89k)
++ 		basic_machine=hppa1.1-winbond
++ 		;;
++ 	op50n)
++ 		basic_machine=hppa1.1-oki
++ 		;;
++ 	op60c)
++ 		basic_machine=hppa1.1-oki
++ 		;;
++ 	mips)
++ 		if [ x$os = x-linux-gnu ]; then
++ 			basic_machine=mips-unknown
++ 		else
++ 			basic_machine=mips-mips
++ 		fi
++ 		;;
++ 	romp)
++ 		basic_machine=romp-ibm
++ 		;;
++ 	rs6000)
++ 		basic_machine=rs6000-ibm
++ 		;;
++ 	vax)
++ 		basic_machine=vax-dec
++ 		;;
++ 	pdp11)
++ 		basic_machine=pdp11-dec
++ 		;;
++ 	we32k)
++ 		basic_machine=we32k-att
++ 		;;
++ 	sh3 | sh4)
++ 		basic_machine=sh-unknown
++ 		;;
++ 	sparc | sparcv9)
++ 		basic_machine=sparc-sun
++ 		;;
++         cydra)
++ 		basic_machine=cydra-cydrome
++ 		;;
++ 	orion)
++ 		basic_machine=orion-highlevel
++ 		;;
++ 	orion105)
++ 		basic_machine=clipper-highlevel
++ 		;;
++ 	mac | mpw | mac-mpw)
++ 		basic_machine=m68k-apple
++ 		;;
++ 	pmac | pmac-mpw)
++ 		basic_machine=powerpc-apple
++ 		;;
++ 	c4x*)
++ 		basic_machine=c4x-none
++ 		os=-coff
++ 		;;
++ 	*)
++ 		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
++ 		exit 1
++ 		;;
++ esac
++ 
++ # Here we canonicalize certain aliases for manufacturers.
++ case $basic_machine in
++ 	*-digital*)
++ 		basic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`
++ 		;;
++ 	*-commodore*)
++ 		basic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`
++ 		;;
++ 	*)
++ 		;;
++ esac
++ 
++ # Decode manufacturer-specific aliases for certain operating systems.
++ 
++ if [ x"$os" != x"" ]
++ then
++ case $os in
++         # First match some system type aliases
++         # that might get confused with valid system types.
++ 	# -solaris* is a basic system type, with this one exception.
++ 	-solaris1 | -solaris1.*)
++ 		os=`echo $os | sed -e 's|solaris1|sunos4|'`
++ 		;;
++ 	-solaris)
++ 		os=-solaris2
++ 		;;
++ 	-svr4*)
++ 		os=-sysv4
++ 		;;
++ 	-unixware*)
++ 		os=-sysv4.2uw
++ 		;;
++ 	-gnu/linux*)
++ 		os=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`
++ 		;;
++ 	# First accept the basic system types.
++ 	# The portable systems comes first.
++ 	# Each alternative MUST END IN A *, to match a version number.
++ 	# -sysv* is not here because it comes later, after sysvr4.
++ 	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
++ 	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -sunos | -sunos[34]*\
++ 	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \
++ 	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
++ 	      | -aos* \
++ 	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
++ 	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
++ 	      | -hiux* | -386bsd* | -netbsd* | -openbsd* | -freebsd* | -riscix* \
++ 	      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
++ 	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
++ 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
++ 	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
++ 	      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -mpeix* | -udk* \
++ 	      | -interix* | -uwin* | -rhapsody* | -darwin* | -opened* \
++ 	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* | -storm-chaos*)
++ 	# Remember, each alternative MUST END IN *, to match a version number.
++ 		;;
++ 	-qnx*)
++ 		case $basic_machine in
++ 		    x86-* | i[34567]86-*)
++ 			;;
++ 		    *)
++ 			os=-nto$os
++ 			;;
++ 		esac
++ 		;;
++ 	-nto*)
++ 		os=-nto-qnx
++ 		;;
++ 	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
++ 	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* \
++ 	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
++ 		;;
++ 	-mac*)
++ 		os=`echo $os | sed -e 's|mac|macos|'`
++ 		;;
++ 	-linux*)
++ 		os=`echo $os | sed -e 's|linux|linux-gnu|'`
++ 		;;
++ 	-sunos5*)
++ 		os=`echo $os | sed -e 's|sunos5|solaris2|'`
++ 		;;
++ 	-sunos6*)
++ 		os=`echo $os | sed -e 's|sunos6|solaris3|'`
++ 		;;
++ 	-opened*)
++ 		os=-openedition
++ 		;;
++ 	-wince*)
++ 		os=-wince
++ 		;;
++ 	-osfrose*)
++ 		os=-osfrose
++ 		;;
++ 	-osf*)
++ 		os=-osf
++ 		;;
++ 	-utek*)
++ 		os=-bsd
++ 		;;
++ 	-dynix*)
++ 		os=-bsd
++ 		;;
++ 	-acis*)
++ 		os=-aos
++ 		;;
++ 	-386bsd)
++ 		os=-bsd
++ 		;;
++ 	-ctix* | -uts*)
++ 		os=-sysv
++ 		;;
++ 	-ns2 )
++ 	        os=-nextstep2
++ 		;;
++ 	-nsk*)
++ 		os=-nsk
++ 		;;
++ 	# Preserve the version number of sinix5.
++ 	-sinix5.*)
++ 		os=`echo $os | sed -e 's|sinix|sysv|'`
++ 		;;
++ 	-sinix*)
++ 		os=-sysv4
++ 		;;
++ 	-triton*)
++ 		os=-sysv3
++ 		;;
++ 	-oss*)
++ 		os=-sysv3
++ 		;;
++ 	-svr4)
++ 		os=-sysv4
++ 		;;
++ 	-svr3)
++ 		os=-sysv3
++ 		;;
++ 	-sysvr4)
++ 		os=-sysv4
++ 		;;
++ 	# This must come after -sysvr4.
++ 	-sysv*)
++ 		;;
++ 	-ose*)
++ 		os=-ose
++ 		;;
++ 	-es1800*)
++ 		os=-ose
++ 		;;
++ 	-xenix)
++ 		os=-xenix
++ 		;;
++         -*mint | -*MiNT)
++ 	        os=-mint
++ 		;;
++ 	-none)
++ 		;;
++ 	*)
++ 		# Get rid of the `-' at the beginning of $os.
++ 		os=`echo $os | sed 's/[^-]*-//'`
++ 		echo Invalid configuration \`$1\': system \`$os\' not recognized 1>&2
++ 		exit 1
++ 		;;
++ esac
++ else
++ 
++ # Here we handle the default operating systems that come with various machines.
++ # The value should be what the vendor currently ships out the door with their
++ # machine or put another way, the most popular os provided with the machine.
++ 
++ # Note that if you're going to try to match "-MANUFACTURER" here (say,
++ # "-sun"), then you have to tell the case statement up towards the top
++ # that MANUFACTURER isn't an operating system.  Otherwise, code above
++ # will signal an error saying that MANUFACTURER isn't an operating
++ # system, and we'll never get to this point.
++ 
++ case $basic_machine in
++ 	*-acorn)
++ 		os=-riscix1.2
++ 		;;
++ 	arm*-rebel)
++ 		os=-linux
++ 		;;
++ 	arm*-semi)
++ 		os=-aout
++ 		;;
++         pdp11-*)
++ 		os=-none
++ 		;;
++ 	*-dec | vax-*)
++ 		os=-ultrix4.2
++ 		;;
++ 	m68*-apollo)
++ 		os=-domain
++ 		;;
++ 	i386-sun)
++ 		os=-sunos4.0.2
++ 		;;
++ 	m68000-sun)
++ 		os=-sunos3
++ 		# This also exists in the configure program, but was not the
++ 		# default.
++ 		# os=-sunos4
++ 		;;
++ 	m68*-cisco)
++ 		os=-aout
++ 		;;
++ 	mips*-cisco)
++ 		os=-elf
++ 		;;
++ 	mips*-*)
++ 		os=-elf
++ 		;;
++ 	*-tti)	# must be before sparc entry or we get the wrong os.
++ 		os=-sysv3
++ 		;;
++ 	sparc-* | *-sun)
++ 		os=-sunos4.1.1
++ 		;;
++ 	*-be)
++ 		os=-beos
++ 		;;
++ 	*-ibm)
++ 		os=-aix
++ 		;;
++ 	*-wec)
++ 		os=-proelf
++ 		;;
++ 	*-winbond)
++ 		os=-proelf
++ 		;;
++ 	*-oki)
++ 		os=-proelf
++ 		;;
++ 	*-hp)
++ 		os=-hpux
++ 		;;
++ 	*-hitachi)
++ 		os=-hiux
++ 		;;
++ 	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
++ 		os=-sysv
++ 		;;
++ 	*-cbm)
++ 		os=-amigaos
++ 		;;
++ 	*-dg)
++ 		os=-dgux
++ 		;;
++ 	*-dolphin)
++ 		os=-sysv3
++ 		;;
++ 	m68k-ccur)
++ 		os=-rtu
++ 		;;
++ 	m88k-omron*)
++ 		os=-luna
++ 		;;
++ 	*-next )
++ 		os=-nextstep
++ 		;;
++ 	*-sequent)
++ 		os=-ptx
++ 		;;
++ 	*-crds)
++ 		os=-unos
++ 		;;
++ 	*-ns)
++ 		os=-genix
++ 		;;
++ 	i370-*)
++ 		os=-mvs
++ 		;;
++ 	*-next)
++ 		os=-nextstep3
++ 		;;
++         *-gould)
++ 		os=-sysv
++ 		;;
++         *-highlevel)
++ 		os=-bsd
++ 		;;
++ 	*-encore)
++ 		os=-bsd
++ 		;;
++         *-sgi)
++ 		os=-irix
++ 		;;
++         *-siemens)
++ 		os=-sysv4
++ 		;;
++ 	*-masscomp)
++ 		os=-rtu
++ 		;;
++ 	f30[01]-fujitsu)
++ 		os=-uxpv
++ 		;;
++ 	*-rom68k)
++ 		os=-coff
++ 		;;
++ 	*-*bug)
++ 		os=-coff
++ 		;;
++ 	*-apple)
++ 		os=-macos
++ 		;;
++ 	*-atari*)
++ 		os=-mint
++ 		;;
++ 	*)
++ 		os=-none
++ 		;;
++ esac
++ fi
++ 
++ # Here we handle the case where we know the os, and the CPU type, but not the
++ # manufacturer.  We pick the logical manufacturer.
++ vendor=unknown
++ case $basic_machine in
++ 	*-unknown)
++ 		case $os in
++ 			-riscix*)
++ 				vendor=acorn
++ 				;;
++ 			-sunos*)
++ 				vendor=sun
++ 				;;
++ 			-aix*)
++ 				vendor=ibm
++ 				;;
++ 			-beos*)
++ 				vendor=be
++ 				;;
++ 			-hpux*)
++ 				vendor=hp
++ 				;;
++ 			-mpeix*)
++ 				vendor=hp
++ 				;;
++ 			-hiux*)
++ 				vendor=hitachi
++ 				;;
++ 			-unos*)
++ 				vendor=crds
++ 				;;
++ 			-dgux*)
++ 				vendor=dg
++ 				;;
++ 			-luna*)
++ 				vendor=omron
++ 				;;
++ 			-genix*)
++ 				vendor=ns
++ 				;;
++ 			-mvs* | -opened*)
++ 				vendor=ibm
++ 				;;
++ 			-ptx*)
++ 				vendor=sequent
++ 				;;
++ 			-vxsim* | -vxworks*)
++ 				vendor=wrs
++ 				;;
++ 			-aux*)
++ 				vendor=apple
++ 				;;
++ 			-hms*)
++ 				vendor=hitachi
++ 				;;
++ 			-mpw* | -macos*)
++ 				vendor=apple
++ 				;;
++ 			-*mint | -*MiNT)
++ 				vendor=atari
++ 				;;
++ 		esac
++ 		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
++ 		;;
++ esac
++ 
++ echo $basic_machine$os
++ exit 0
++ 
++ # Local variables:
++ # eval: (add-hook 'write-file-hooks 'time-stamp)
++ # time-stamp-start: "timestamp='"
++ # time-stamp-format: "%:y-%02m-%02d"
++ # time-stamp-end: "'"
++ # End:
diff -Naur libnids-1.21/configure.gnu libnids-1.21_patched/configure.gnu
--- libnids-1.21/configure.gnu	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/configure.gnu	2010-03-27 20:20:28.329673382 +0100
@@ -0,0 +1,3 @@
+#!/bin/sh
+
+./configure --disable-libnet --disable-libglib $@
\ No newline at end of file
diff -Naur libnids-1.21/README libnids-1.21_patched/README
--- libnids-1.21/README	2006-05-04 18:24:02.000000000 +0200
+++ libnids-1.21_patched/README	2010-03-27 20:20:28.333657776 +0100
@@ -1,62 +1,5 @@
+This library is a modified version of the libnids-1.21.
+It has been modified in order to pass capture time-stamp to the original tcp callback functions.
+The original README was renamed README.original
 
-                             ====================
-                                 libnids-1.21
-                             ====================
-
-1. What is libnids ?
-------------------------
-
-	Libnids is a library that provides a functionality of one of NIDS 
-(Network Intrusion Detection System) components, namely E-component. It means 
-that libnids code watches all local network traffic, cooks received datagrams 
-a bit (quite a bit ;)), and provides convenient information on them to 
-analyzing modules of NIDS. Libnids performs:
-a) assembly of TCP segments into TCP streams
-b) IP defragmentation
-c) TCP port scan detection 
-More technical info can be found in MISC file.
-	So, if you intend to develop a custom NIDS, you don't have to build
-low-level network code. If you decide to use libnids, you have got
-E-component ready - you can focus on implementing other parts of NIDS.
-
-2. Why is libnids valuable ?
-----------------------------
-
-	On January 98, Thomas H. Ptacek and Timothy N. Newsham published an
-excellent paper entitled "Eluding Network Intrusion Detection". It's a
-must-read for all security concerned people, available from
-http://www.robertgraham.com/mirror/Ptacek-Newsham-Evasion-98.html
-In this paper one can find description of variety of attack against NIDS.
-During libnids development a lot of effort was made to make libnids immune
-to these attacks. During tests libnids performed TCP assembly and IP 
-defragmentation in exactly the same way as Linux 2.0.36 hosts
-(targets of test packets). For details, see file TESTS; here let's just 
-mention two things:
-a) libnids passed all tests implemented in fragrouter by Dug Song (see 
-   http://www.anzen.com/research/nidsbench/ ). In fact, fragrouter's tests were
-   fairly simple when compared with other, custom ones.
-b) libnids IP defragmenting module contains slightly modified Linux 2.0.36 
-   kernel source files ip_fragment.c and ip_options.c. It means that libnids IP
-   defragmentation is as reliable as one implemented in Linux 2.0.36.
-Libnids is easy to use and highly configurable - see API file for details.
-
-3. On what platform does it run ?
----------------------------------
-
-Currently libnids will compile on Linux, Solaris, any *BSD. WIN32 port is
-available at http://www.datanerds.net/~mike/libnids.html, but currently only
-obsoleted versions are present there; newer ports may appear at
-http://www.checksum.org (in "downloads" section).
-
-4. Who is allowed to use it ?
------------------------------
-
-Libnids is licensed under GPL. See the file COPYING for details.
-
-5. Contact info ?
------------------
-
-The primary libnids site is 
-http://libnids.sourceforge.net/
-Please send bug reports, comments, or questions about this software to
-<nergal@avet.com.pl>.
+Oreste Notelli
diff -Naur libnids-1.21/README.original libnids-1.21_patched/README.original
--- libnids-1.21/README.original	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/README.original	2010-03-27 20:20:28.333657776 +0100
@@ -0,0 +1,62 @@
+
+                             ====================
+                                 libnids-1.21
+                             ====================
+
+1. What is libnids ?
+------------------------
+
+	Libnids is a library that provides a functionality of one of NIDS 
+(Network Intrusion Detection System) components, namely E-component. It means 
+that libnids code watches all local network traffic, cooks received datagrams 
+a bit (quite a bit ;)), and provides convenient information on them to 
+analyzing modules of NIDS. Libnids performs:
+a) assembly of TCP segments into TCP streams
+b) IP defragmentation
+c) TCP port scan detection 
+More technical info can be found in MISC file.
+	So, if you intend to develop a custom NIDS, you don't have to build
+low-level network code. If you decide to use libnids, you have got
+E-component ready - you can focus on implementing other parts of NIDS.
+
+2. Why is libnids valuable ?
+----------------------------
+
+	On January 98, Thomas H. Ptacek and Timothy N. Newsham published an
+excellent paper entitled "Eluding Network Intrusion Detection". It's a
+must-read for all security concerned people, available from
+http://www.robertgraham.com/mirror/Ptacek-Newsham-Evasion-98.html
+In this paper one can find description of variety of attack against NIDS.
+During libnids development a lot of effort was made to make libnids immune
+to these attacks. During tests libnids performed TCP assembly and IP 
+defragmentation in exactly the same way as Linux 2.0.36 hosts
+(targets of test packets). For details, see file TESTS; here let's just 
+mention two things:
+a) libnids passed all tests implemented in fragrouter by Dug Song (see 
+   http://www.anzen.com/research/nidsbench/ ). In fact, fragrouter's tests were
+   fairly simple when compared with other, custom ones.
+b) libnids IP defragmenting module contains slightly modified Linux 2.0.36 
+   kernel source files ip_fragment.c and ip_options.c. It means that libnids IP
+   defragmentation is as reliable as one implemented in Linux 2.0.36.
+Libnids is easy to use and highly configurable - see API file for details.
+
+3. On what platform does it run ?
+---------------------------------
+
+Currently libnids will compile on Linux, Solaris, any *BSD. WIN32 port is
+available at http://www.datanerds.net/~mike/libnids.html, but currently only
+obsoleted versions are present there; newer ports may appear at
+http://www.checksum.org (in "downloads" section).
+
+4. Who is allowed to use it ?
+-----------------------------
+
+Libnids is licensed under GPL. See the file COPYING for details.
+
+5. Contact info ?
+-----------------
+
+The primary libnids site is 
+http://libnids.sourceforge.net/
+Please send bug reports, comments, or questions about this software to
+<nergal@avet.com.pl>.
diff -Naur libnids-1.21/src/allpromisc.c libnids-1.21_patched/src/allpromisc.c
--- libnids-1.21/src/allpromisc.c	2004-07-23 12:10:39.000000000 +0200
+++ libnids-1.21_patched/src/allpromisc.c	2010-03-27 20:20:28.333657776 +0100
@@ -1,4 +1,4 @@
-#include "nids.h"
+#include "nids2.h"
 #ifdef __linux__
 #include <sys/socket.h>
 #include <netinet/in.h>
diff -Naur libnids-1.21/src/checksum.c libnids-1.21_patched/src/checksum.c
--- libnids-1.21/src/checksum.c	2005-02-08 16:46:11.000000000 +0100
+++ libnids-1.21_patched/src/checksum.c	2010-03-27 20:20:28.333657776 +0100
@@ -5,7 +5,7 @@
 #include <netinet/ip.h>
 #include <netinet/tcp.h>
 #include <netinet/udp.h>
-#include "nids.h"
+#include "nids2.h"
 
 static struct nids_chksum_ctl * nchk;
 static int nrnochksum=0;
diff -Naur libnids-1.21/src/config.h libnids-1.21_patched/src/config.h
--- libnids-1.21/src/config.h	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/src/config.h	2010-03-27 20:20:28.337659213 +0100
@@ -0,0 +1,84 @@
+/* src/config.h.  Generated by configure.  */
+/* src/config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#define HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `gthread-2.0' library (-lgthread-2.0). */
+/* #undef HAVE_LIBGTHREAD_2_0 */
+
+/* Define to 1 if you have the `nsl' library (-lnsl). */
+#define HAVE_LIBNSL 1
+
+/* Define to 1 if you have the `socket' library (-lsocket). */
+/* #undef HAVE_LIBSOCKET */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <syslog.h> header file. */
+#define HAVE_SYSLOG_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* if unaligned access fails */
+/* #undef LBL_ALIGN */
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME ""
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING ""
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION ""
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define TIME_WITH_SYS_TIME 1
+
+/* Define to 1 if your processor stores words with the most significant byte
+   first (like Motorola and SPARC, unlike Intel and VAX). */
+/* #undef WORDS_BIGENDIAN */
+
+/* Define to empty if `const' does not conform to ANSI C. */
+/* #undef const */
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
diff -Naur libnids-1.21/src/ip_fragment.c libnids-1.21_patched/src/ip_fragment.c
--- libnids-1.21/src/ip_fragment.c	2006-05-01 18:58:48.000000000 +0200
+++ libnids-1.21_patched/src/ip_fragment.c	2010-03-27 20:20:28.345669534 +0100
@@ -18,7 +18,7 @@
 #include "ip_fragment.h"
 #include "tcp.h"
 #include "util.h"
-#include "nids.h"
+#include "nids2.h"
 
 #define IP_CE		0x8000	/* Flag: "Congestion" */
 #define IP_DF		0x4000	/* Flag: "Don't Fragment" */
diff -Naur libnids-1.21/src/killtcp.c libnids-1.21_patched/src/killtcp.c
--- libnids-1.21/src/killtcp.c	2006-05-08 22:05:51.000000000 +0200
+++ libnids-1.21_patched/src/killtcp.c	2010-03-27 20:21:01.869660639 +0100
@@ -7,7 +7,7 @@
 #include <stdlib.h>
 #include "tcp.h"
 #include "util.h"
-#include "nids.h"
+#include "nids2.h"
 #if LIBNET_VER == 0
 #include <libnet.h>
 
@@ -118,6 +118,5 @@
     if (initialized)
 	abort();
 }
-#elif
-#error Something wrong with LIBNET_VER
+#else
 #endif
diff -Naur libnids-1.21/src/libnids.c libnids-1.21_patched/src/libnids.c
--- libnids-1.21/src/libnids.c	2006-05-04 18:38:28.000000000 +0200
+++ libnids-1.21_patched/src/libnids.c	2010-03-27 20:20:28.345669534 +0100
@@ -3,7 +3,7 @@
   See the file COPYING for license details.
 */
 
-#include <config.h>
+#include "config.h"
 #include <sys/types.h>
 #include <netinet/in.h>
 #include <netinet/in_systm.h>
@@ -26,7 +26,7 @@
 #include "scan.h"
 #include "tcp.h"
 #include "util.h"
-#include "nids.h"
+#include "nids2.h"
 #ifdef HAVE_LIBGTHREAD_2_0
 #include <glib.h>
 #endif
@@ -191,11 +191,11 @@
 /* called either directly from pcap_hand() or from cap_queue_process_thread()
  * depending on the value of nids_params.multiproc - mcree
  */
-static void call_ip_frag_procs(void *data,bpf_u_int32 caplen)
+static void call_ip_frag_procs(void *data,bpf_u_int32 caplen, struct timeval* ts)
 {
     struct proc_node *i;
     for (i = ip_frag_procs; i; i = i->next)
-	(i->item) (data, caplen);
+		(i->item) (data, caplen,  ts);
 }
 
 
@@ -337,14 +337,14 @@
           g_async_queue_unlock(cap_queue);
 	}
      } else { /* user requested simple passthru - no threading */
-        call_ip_frag_procs(data_aligned,hdr->caplen - nids_linkoffset);
+        call_ip_frag_procs(data_aligned,hdr->caplen - nids_linkoffset, &hdr->ts);
      }
  #else
-     call_ip_frag_procs(data_aligned,hdr->caplen - nids_linkoffset);
+     call_ip_frag_procs(data_aligned,hdr->caplen - nids_linkoffset, &hdr->ts);
  #endif
 }
 
-static void gen_ip_frag_proc(u_char * data, int len)
+static void gen_ip_frag_proc(u_char * data, int len, struct timeval* ts)
 {
     struct proc_node *i;
     struct ip *iph = (struct ip *) data;
@@ -355,7 +355,7 @@
 
     if (!nids_params.ip_filter(iph, len))
 	return;
-
+	
     if (len < (int)sizeof(struct ip) || iph->ip_hl < 5 || iph->ip_v != 4 ||
 	ip_fast_csum((unsigned char *) iph, iph->ip_hl) != 0 ||
 	len < ntohs(iph->ip_len) || ntohs(iph->ip_len) < iph->ip_hl << 2) {
@@ -366,7 +366,8 @@
 	glibc_syslog_h_workaround(NIDS_WARN_IP, NIDS_WARN_IP_SRR, iph, 0);
 	return;
     }
-    switch (ip_defrag_stub((struct ip *) data, &iph)) {
+
+	switch (ip_defrag_stub((struct ip *) data, &iph)) {
     case IPF_ISF:
 	return;
     case IPF_NOTF:
@@ -385,7 +386,7 @@
     skblen += nids_params.sk_buff_size;
 
     for (i = ip_procs; i; i = i->next)
-	(i->item) (iph, skblen);
+	(i->item) (iph, skblen, ts);
     if (need_free)
 	free(iph);
 }
@@ -400,7 +401,7 @@
 #define UH_DPORT dest
 #endif
 
-static void process_udp(char *data)
+static void process_udp(char *data, struct timeval* ts)
 {
     struct proc_node *ipp = udp_procs;
     struct ip *iph = (struct ip *) data;
@@ -429,18 +430,19 @@
 	ipp = ipp->next;
     }
 }
-static void gen_ip_proc(u_char * data, int skblen)
+
+static void gen_ip_proc(u_char * data, int skblen, struct timeval* ts)
 {
-    switch (((struct ip *) data)->ip_p) {
+	switch (((struct ip *) data)->ip_p) {
     case IPPROTO_TCP:
-	process_tcp(data, skblen);
+	process_tcp(data, skblen,  ts);
 	break;
     case IPPROTO_UDP:
-	process_udp(data);
+	process_udp(data,  ts);
 	break;
     case IPPROTO_ICMP:
 	if (nids_params.n_tcp_streams)
-	    process_icmp(data);
+	    process_icmp(data, ts);
 	break;
     default:
 	break;
@@ -551,7 +553,7 @@
      while(1) { /* loop "forever" */
 	  qitem=g_async_queue_pop(cap_queue);
 	  if (qitem==&EOF_item) break; /* EOF item received: we should exit */
-	  call_ip_frag_procs(qitem->data,qitem->caplen);
+	  // TO FIX: Oreste. call_ip_frag_procs(qitem->data,qitem->caplen);
 	  free(qitem->data);
 	  free(qitem);
      }
diff -Naur libnids-1.21/src/Makefile.in libnids-1.21_patched/src/Makefile.in
--- libnids-1.21/src/Makefile.in	2006-05-01 19:14:51.000000000 +0200
+++ libnids-1.21_patched/src/Makefile.in	2010-03-27 20:20:28.345669534 +0100
@@ -1,5 +1,5 @@
 #
-# Makefile for libnids.
+# Makefile for libnids2.
 #
 # Dug Song <dugsong@monkey.org>
 
@@ -12,8 +12,8 @@
 includedir	= @includedir@
 libdir		= @libdir@
 mandir		= @mandir@
-LIBSTATIC      = libnids.a
-LIBSHARED      = libnids.so.1.21
+LIBSTATIC      = libnids2.a
+LIBSHARED      = libnids2.so.1.21
 
 CC		= @CC@
 CFLAGS		= @CFLAGS@ -W -Wall -DLIBNET_VER=@LIBNET_VER@ -DHAVE_ICMPHDR=@ICMPHEADER@ -DHAVE_TCP_STATES=@TCPSTATES@ -DHAVE_BSD_UDPHDR=@HAVE_BSD_UDPHDR@
@@ -71,12 +71,12 @@
 	../mkinstalldirs $(install_prefix)$(libdir)
 	../mkinstalldirs $(install_prefix)$(includedir)
 	../mkinstalldirs $(install_prefix)$(mandir)/man3
-	$(INSTALL) -c -m 644 libnids.a $(install_prefix)$(libdir)
-	$(INSTALL) -c -m 644 nids.h $(install_prefix)$(includedir)
-	$(INSTALL) -c -m 644 libnids.3 $(install_prefix)$(mandir)/man3
+	# we don't want to distribute the patched version of libnids. It is usefull just for justniffer
+	#$(INSTALL) -c -m 644 libnids2.a $(install_prefix)$(libdir)
+	#$(INSTALL) -c -m 644 nids2.h $(install_prefix)$(includedir)
 _installshared installshared: install $(LIBSHARED)
-	$(INSTALL) -c -m 755 $(LIBSHARED) $(install_prefix)$(libdir)
-	ln -s -f $(LIBSHARED) $(install_prefix)$(libdir)/libnids.so
+	#$(INSTALL) -c -m 755 $(LIBSHARED) $(install_prefix)$(libdir)
+	#ln -s -f $(LIBSHARED) $(install_prefix)$(libdir)/libnids2.so
  
 clean:
 	rm -f *.o *~ $(LIBSTATIC) $(LIBSHARED)
diff -Naur libnids-1.21/src/nids2.h libnids-1.21_patched/src/nids2.h
--- libnids-1.21/src/nids2.h	1970-01-01 01:00:00.000000000 +0100
+++ libnids-1.21_patched/src/nids2.h	2010-03-27 20:20:28.345669534 +0100
@@ -0,0 +1,181 @@
+/*
+  Copyright (c) 1999 Rafal Wojtczuk <nergal@avet.com.pl>. All rights reserved.
+  See the file COPYING for license details.
+*/
+
+#ifndef _NIDS2_NIDS2_H
+# define _NIDS2_NIDS2_H
+
+# include <sys/types.h>
+#include <netinet/in_systm.h>
+#include <netinet/in.h>
+# include <netinet/ip.h>
+# include <netinet/tcp.h>
+# include <pcap.h>
+
+# ifdef __cplusplus
+extern "C" {
+# endif
+
+# define NIDS_MAJOR 1
+# define NIDS_MINOR 20
+
+enum
+{
+  NIDS_WARN_IP = 1,
+  NIDS_WARN_TCP,
+  NIDS_WARN_UDP,
+  NIDS_WARN_SCAN
+};
+
+enum
+{
+  NIDS_WARN_UNDEFINED = 0,
+  NIDS_WARN_IP_OVERSIZED,
+  NIDS_WARN_IP_INVLIST,
+  NIDS_WARN_IP_OVERLAP,
+  NIDS_WARN_IP_HDR,
+  NIDS_WARN_IP_SRR,
+  NIDS_WARN_TCP_TOOMUCH,
+  NIDS_WARN_TCP_HDR,
+  NIDS_WARN_TCP_BIGQUEUE,
+  NIDS_WARN_TCP_BADFLAGS
+};
+
+# define NIDS_JUST_EST 1
+# define NIDS_DATA 2
+# define NIDS_CLOSE 3
+# define NIDS_RESET 4
+# define NIDS_TIMED_OUT 5
+# define NIDS_EXITING   6	/* nids is exiting; last chance to get data */
+# define NIDS_OPENING 7
+
+# define NIDS_DO_CHKSUM  0
+# define NIDS_DONT_CHKSUM 1
+
+struct tuple4
+{
+  u_short source;
+  u_short dest;
+  u_int saddr;
+  u_int daddr;
+};
+
+struct half_stream
+{
+  char state;
+  char collect;
+  char collect_urg;
+
+  char *data;
+  int offset;
+  int count;
+  int count_new;
+  int bufsize;
+  int rmem_alloc;
+
+  int urg_count;
+  u_int acked;
+  u_int seq;
+  u_int ack_seq;
+  u_int first_data_seq;
+  u_char urgdata;
+  u_char count_new_urg;
+  u_char urg_seen;
+  u_int urg_ptr;
+  u_short window;
+  u_char ts_on;
+  u_char wscale_on;
+  u_int curr_ts; 
+  u_int wscale;
+  struct skbuff *list;
+  struct skbuff *listtail;
+};
+
+struct tcp_stream
+{
+  struct tuple4 addr;
+  char nids_state;
+  struct lurker_node *listeners;
+  struct half_stream client;
+  struct half_stream server;
+  struct tcp_stream *next_node;
+  struct tcp_stream *prev_node;
+  int hash_index;
+  struct tcp_stream *next_time;
+  struct tcp_stream *prev_time;
+  int read;
+  struct tcp_stream *next_free;
+  void *user;
+};
+
+struct nids_prm
+{
+  int n_tcp_streams;
+  int n_hosts;
+  char *device;
+  char *filename;
+  int sk_buff_size;
+  int dev_addon;
+  void (*syslog) ();
+  int syslog_level;
+  int scan_num_hosts;
+  int scan_delay;
+  int scan_num_ports;
+  void (*no_mem) (char *);
+  int (*ip_filter) ();
+  char *pcap_filter;
+  int promisc;
+  int one_loop_less;
+  int pcap_timeout;
+  int multiproc;
+  int queue_limit;
+  int tcp_workarounds;
+  pcap_t *pcap_desc;
+};
+
+struct tcp_timeout
+{
+  struct tcp_stream *a_tcp;
+  struct timeval timeout;
+  struct tcp_timeout *next;
+  struct tcp_timeout *prev;
+};
+
+int nids_init (void);
+void nids_register_ip_frag (void (*));
+void nids_register_ip (void (*));
+void nids_register_tcp (void (*));
+void nids_register_udp (void (*));
+void nids_killtcp (struct tcp_stream *);
+void nids_discard (struct tcp_stream *, int);
+int nids_run (void);
+void nids_exit(void);
+int nids_getfd (void);
+int nids_dispatch (int);
+int nids_next (void);
+void nids_pcap_handler(u_char *, struct pcap_pkthdr *, u_char *);
+struct tcp_stream *nids_find_tcp_stream(struct tuple4 *);
+void nids_free_tcp_stream(struct tcp_stream *);
+
+extern struct nids_prm nids_params;
+extern char *nids_warnings[];
+extern char nids_errbuf[];
+extern struct pcap_pkthdr *nids_last_pcap_header;
+extern u_char *nids_last_pcap_data;
+extern u_int nids_linkoffset;
+extern struct tcp_timeout *nids_tcp_timeouts;
+
+struct nids_chksum_ctl {
+	u_int netaddr;
+	u_int mask;
+	u_int action;
+	u_int reserved;
+};
+extern void nids_register_chksum_ctl(struct nids_chksum_ctl *, int);
+
+# ifdef __cplusplus
+}
+# endif
+
+#endif /* _NIDS2_NIDS2_H */
diff -Naur libnids-1.21/src/nids.h libnids-1.21_patched/src/nids.h
--- libnids-1.21/src/nids.h	2006-05-08 22:05:20.000000000 +0200
+++ libnids-1.21_patched/src/nids.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,180 +0,0 @@
-/*
-  Copyright (c) 1999 Rafal Wojtczuk <nergal@avet.com.pl>. All rights reserved.
-  See the file COPYING for license details.
-*/
-
-#ifndef _NIDS_NIDS_H
-# define _NIDS_NIDS_H
-
-# include <sys/types.h>
-#include <netinet/in_systm.h>
-#include <netinet/in.h>
-# include <netinet/ip.h>
-# include <netinet/tcp.h>
-# include <pcap.h>
-
-# ifdef __cplusplus
-extern "C" {
-# endif
-
-# define NIDS_MAJOR 1
-# define NIDS_MINOR 20
-
-enum
-{
-  NIDS_WARN_IP = 1,
-  NIDS_WARN_TCP,
-  NIDS_WARN_UDP,
-  NIDS_WARN_SCAN
-};
-
-enum
-{
-  NIDS_WARN_UNDEFINED = 0,
-  NIDS_WARN_IP_OVERSIZED,
-  NIDS_WARN_IP_INVLIST,
-  NIDS_WARN_IP_OVERLAP,
-  NIDS_WARN_IP_HDR,
-  NIDS_WARN_IP_SRR,
-  NIDS_WARN_TCP_TOOMUCH,
-  NIDS_WARN_TCP_HDR,
-  NIDS_WARN_TCP_BIGQUEUE,
-  NIDS_WARN_TCP_BADFLAGS
-};
-
-# define NIDS_JUST_EST 1
-# define NIDS_DATA 2
-# define NIDS_CLOSE 3
-# define NIDS_RESET 4
-# define NIDS_TIMED_OUT 5
-# define NIDS_EXITING   6	/* nids is exiting; last chance to get data */
-
-# define NIDS_DO_CHKSUM  0
-# define NIDS_DONT_CHKSUM 1
-
-struct tuple4
-{
-  u_short source;
-  u_short dest;
-  u_int saddr;
-  u_int daddr;
-};
-
-struct half_stream
-{
-  char state;
-  char collect;
-  char collect_urg;
-
-  char *data;
-  int offset;
-  int count;
-  int count_new;
-  int bufsize;
-  int rmem_alloc;
-
-  int urg_count;
-  u_int acked;
-  u_int seq;
-  u_int ack_seq;
-  u_int first_data_seq;
-  u_char urgdata;
-  u_char count_new_urg;
-  u_char urg_seen;
-  u_int urg_ptr;
-  u_short window;
-  u_char ts_on;
-  u_char wscale_on;
-  u_int curr_ts; 
-  u_int wscale;
-  struct skbuff *list;
-  struct skbuff *listtail;
-};
-
-struct tcp_stream
-{
-  struct tuple4 addr;
-  char nids_state;
-  struct lurker_node *listeners;
-  struct half_stream client;
-  struct half_stream server;
-  struct tcp_stream *next_node;
-  struct tcp_stream *prev_node;
-  int hash_index;
-  struct tcp_stream *next_time;
-  struct tcp_stream *prev_time;
-  int read;
-  struct tcp_stream *next_free;
-  void *user;
-};
-
-struct nids_prm
-{
-  int n_tcp_streams;
-  int n_hosts;
-  char *device;
-  char *filename;
-  int sk_buff_size;
-  int dev_addon;
-  void (*syslog) ();
-  int syslog_level;
-  int scan_num_hosts;
-  int scan_delay;
-  int scan_num_ports;
-  void (*no_mem) (char *);
-  int (*ip_filter) ();
-  char *pcap_filter;
-  int promisc;
-  int one_loop_less;
-  int pcap_timeout;
-  int multiproc;
-  int queue_limit;
-  int tcp_workarounds;
-  pcap_t *pcap_desc;
-};
-
-struct tcp_timeout
-{
-  struct tcp_stream *a_tcp;
-  struct timeval timeout;
-  struct tcp_timeout *next;
-  struct tcp_timeout *prev;
-};
-
-int nids_init (void);
-void nids_register_ip_frag (void (*));
-void nids_register_ip (void (*));
-void nids_register_tcp (void (*));
-void nids_register_udp (void (*));
-void nids_killtcp (struct tcp_stream *);
-void nids_discard (struct tcp_stream *, int);
-int nids_run (void);
-void nids_exit(void);
-int nids_getfd (void);
-int nids_dispatch (int);
-int nids_next (void);
-void nids_pcap_handler(u_char *, struct pcap_pkthdr *, u_char *);
-struct tcp_stream *nids_find_tcp_stream(struct tuple4 *);
-void nids_free_tcp_stream(struct tcp_stream *);
-
-extern struct nids_prm nids_params;
-extern char *nids_warnings[];
-extern char nids_errbuf[];
-extern struct pcap_pkthdr *nids_last_pcap_header;
-extern u_char *nids_last_pcap_data;
-extern u_int nids_linkoffset;
-extern struct tcp_timeout *nids_tcp_timeouts;
-
-struct nids_chksum_ctl {
-	u_int netaddr;
-	u_int mask;
-	u_int action;
-	u_int reserved;
-};
-extern void nids_register_chksum_ctl(struct nids_chksum_ctl *, int);
-
-# ifdef __cplusplus
-}
-# endif
-
-#endif /* _NIDS_NIDS_H */
diff -Naur libnids-1.21/src/scan.c libnids-1.21_patched/src/scan.c
--- libnids-1.21/src/scan.c	2006-05-01 18:58:48.000000000 +0200
+++ libnids-1.21_patched/src/scan.c	2010-03-27 20:20:28.349655979 +0100
@@ -12,7 +12,7 @@
 #include <netinet/ip.h>
 #include <netinet/tcp.h>
 
-#include "nids.h"
+#include "nids2.h"
 #include "scan.h"
 
 static struct host **hashhost;
diff -Naur libnids-1.21/src/tcp.c libnids-1.21_patched/src/tcp.c
--- libnids-1.21/src/tcp.c	2006-05-01 19:07:25.000000000 +0200
+++ libnids-1.21_patched/src/tcp.c	2010-03-27 20:20:28.349655979 +0100
@@ -18,7 +18,7 @@
 #include "scan.h"
 #include "tcp.h"
 #include "util.h"
-#include "nids.h"
+#include "nids2.h"
 #include "hash.h"
 
 #if ! HAVE_TCP_STATES
@@ -176,7 +176,7 @@
       return;
     to->a_tcp->nids_state = NIDS_TIMED_OUT;
     for (i = to->a_tcp->listeners; i; i = i->next)
-      (i->item) (to->a_tcp, &i->data);
+      (i->item) (to->a_tcp, &i->data, now, NULL);
     next = to->next;
     nids_free_tcp_stream(to->a_tcp);
   }
@@ -249,8 +249,8 @@
     
 
 
-static void
-add_new_tcp(struct tcphdr * this_tcphdr, struct ip * this_iphdr)
+static struct tcp_stream*
+add_new_tcp(struct tcphdr * this_tcphdr, struct ip * this_iphdr, const struct timeval* ts, void* data)
 {
   struct tcp_stream *tolink;
   struct tcp_stream *a_tcp;
@@ -268,7 +268,7 @@
 
     tcp_oldest->nids_state = NIDS_TIMED_OUT;
     for (i = tcp_oldest->listeners; i; i = i->next)
-      (i->item) (tcp_oldest, &i->data);
+      (i->item) (tcp_oldest, &i->data, ts, data);
     nids_free_tcp_stream(tcp_oldest);
     nids_params.syslog(NIDS_WARN_TCP, NIDS_WARN_TCP_TOOMUCH, ugly_iphdr, this_tcphdr);
   }
@@ -303,6 +303,7 @@
   if (tcp_latest)
     tcp_latest->prev_time = a_tcp;
   tcp_latest = a_tcp;
+  return a_tcp;
 }
 
 static void
@@ -336,7 +337,7 @@
 }
 
 static void
-ride_lurkers(struct tcp_stream * a_tcp, char mask)
+ride_lurkers(struct tcp_stream * a_tcp, char mask, struct timeval * t)
 {
   struct lurker_node *i;
   char cc, sc, ccu, scu;
@@ -348,7 +349,7 @@
       ccu = a_tcp->client.collect_urg;
       scu = a_tcp->server.collect_urg;
 
-      (i->item) (a_tcp, &i->data);
+      (i->item) (a_tcp, &i->data, t);
       if (cc < a_tcp->client.collect)
 	i->whatto |= COLLECT_cc;
       if (ccu < a_tcp->client.collect_urg)
@@ -369,7 +370,7 @@
 }
 
 static void
-notify(struct tcp_stream * a_tcp, struct half_stream * rcv)
+notify(struct tcp_stream * a_tcp, struct half_stream * rcv, struct time* t)
 {
   struct lurker_node *i, **prev_addr;
   char mask;
@@ -381,7 +382,7 @@
       mask = COLLECT_ccu;
     else
       mask = COLLECT_scu;
-    ride_lurkers(a_tcp, mask);
+    ride_lurkers(a_tcp, mask, t);
     goto prune_listeners;
   }
   if (rcv->collect) {
@@ -394,7 +395,7 @@
 		a_tcp->read = rcv->count - rcv->offset;
 		  total=a_tcp->read;
   
-	    ride_lurkers(a_tcp, mask);
+	    ride_lurkers(a_tcp, mask, t);
 	    if (a_tcp->read>total-rcv->count_new)
 	    	rcv->count_new=total-a_tcp->read;
 	    
@@ -425,7 +426,7 @@
 add_from_skb(struct tcp_stream * a_tcp, struct half_stream * rcv,
 	     struct half_stream * snd,
 	     u_char *data, int datalen,
-	     u_int this_seq, char fin, char urg, u_int urg_ptr)
+	     u_int this_seq, char fin, char urg, u_int urg_ptr, struct timeval* t)
 {
   u_int lost = EXP_SEQ - this_seq;
   int to_copy, to_copy2;
@@ -441,7 +442,7 @@
     if (to_copy > 0) {
       if (rcv->collect) {
 	add2buf(rcv, data + lost, to_copy);
-	notify(a_tcp, rcv);
+	notify(a_tcp, rcv, t);
       }
       else {
 	rcv->count += to_copy;
@@ -450,14 +451,14 @@
     }
     rcv->urgdata = data[rcv->urg_ptr - this_seq];
     rcv->count_new_urg = 1;
-    notify(a_tcp, rcv);
+    notify(a_tcp, rcv, t);
     rcv->count_new_urg = 0;
     rcv->urg_count++;
     to_copy2 = this_seq + datalen - rcv->urg_ptr - 1;
     if (to_copy2 > 0) {
       if (rcv->collect) {
 	add2buf(rcv, data + lost + to_copy + 1, to_copy2);
-	notify(a_tcp, rcv);
+	notify(a_tcp, rcv, t);
       }
       else {
 	rcv->count += to_copy2;
@@ -469,7 +470,7 @@
     if (datalen - lost > 0) {
       if (rcv->collect) {
 	add2buf(rcv, data + lost, datalen - lost);
-	notify(a_tcp, rcv);
+	notify(a_tcp, rcv, t);
       }
       else {
 	rcv->count += datalen - lost;
@@ -487,7 +488,7 @@
 static void
 tcp_queue(struct tcp_stream * a_tcp, struct tcphdr * this_tcphdr,
 	  struct half_stream * snd, struct half_stream * rcv,
-	  char *data, int datalen, int skblen
+	  char *data, int datalen, int skblen, struct timeval* t
 	  )
 {
   u_int this_seq = ntohl(this_tcphdr->th_seq);
@@ -504,7 +505,7 @@
       add_from_skb(a_tcp, rcv, snd, data, datalen, this_seq,
 		   (this_tcphdr->th_flags & TH_FIN),
 		   (this_tcphdr->th_flags & TH_URG),
-		   ntohs(this_tcphdr->th_urp) + this_seq - 1);
+		   ntohs(this_tcphdr->th_urp) + this_seq - 1, t);
       /*
        * Do we have any old packets to ack that the above
        * made visible? (Go forward from skb)
@@ -518,7 +519,7 @@
 	  
 	  add_from_skb(a_tcp, rcv, snd, pakiet->data,
 		       pakiet->len, pakiet->seq, pakiet->fin, pakiet->urg,
-		       pakiet->urg_ptr + pakiet->seq - 1);
+		       pakiet->urg_ptr + pakiet->seq - 1, t);
 	  rcv->rmem_alloc -= pakiet->truesize;
 	  if (pakiet->prev)
 	    pakiet->prev->next = pakiet->next;
@@ -687,7 +688,7 @@
          a_tcp = a_tcp->next_node) {
       for (j = a_tcp->listeners; j; j = j->next) {
           a_tcp->nids_state = NIDS_EXITING;
-	  (j->item)(a_tcp, &j->data);
+	  (j->item)(a_tcp, &j->data, 0);
       }
     }
   }
@@ -699,7 +700,7 @@
 }
 
 void
-process_tcp(u_char * data, int skblen)
+process_tcp(u_char * data, int skblen, struct timeval* ts)
 {
   struct ip *this_iphdr = (struct ip *)data;
   struct tcphdr *this_tcphdr = (struct tcphdr *)(data + 4 * this_iphdr->ip_hl);
@@ -724,7 +725,7 @@
 		       this_tcphdr);
     return;
   } // ktos sie bawi
-
+  //printf("this_tcphdr->th_flags %X\n",this_tcphdr->th_flags);
   if ((this_iphdr->ip_src.s_addr | this_iphdr->ip_dst.s_addr) == 0) {
     nids_params.syslog(NIDS_WARN_TCP, NIDS_WARN_TCP_HDR, this_iphdr,
 		       this_tcphdr);
@@ -747,9 +748,24 @@
     if ((this_tcphdr->th_flags & TH_SYN) &&
 	!(this_tcphdr->th_flags & TH_ACK) &&
 	!(this_tcphdr->th_flags & TH_RST))
-      add_new_tcp(this_tcphdr, this_iphdr);
+      a_tcp = add_new_tcp(this_tcphdr, this_iphdr, ts, data);
+      if (a_tcp)
+      {
+	a_tcp->nids_state = NIDS_OPENING;
+	{
+	  //printf("a_tcp->nids_state = NIDS_OPENING\n");
+	  struct proc_node *i;
+	  for (i = tcp_procs; i; i = i->next) 
+	  {
+	    void *data;
+	    //printf("for (i = a_tcp->listeners; i; i = i->next) %X\n", i);
+	    (i->item) (a_tcp, NULL, ts, data);      
+	  }
+	}
+      }
     return;
   }
+  //printf("a_tcp->listeners %X\n",a_tcp->listeners);
   if (from_client) {
     snd = &a_tcp->client;
     rcv = &a_tcp->server;
@@ -802,7 +818,7 @@
 
       a_tcp->nids_state = NIDS_RESET;
       for (i = a_tcp->listeners; i; i = i->next)
-	(i->item) (a_tcp, &i->data);
+	(i->item) (a_tcp, &i->data, ts, data);
     }
     nids_free_tcp_stream(a_tcp);
     return;
@@ -833,7 +849,7 @@
 	    char ccu = a_tcp->client.collect_urg;
 	    char scu = a_tcp->server.collect_urg;
 	    
-	    (i->item) (a_tcp, &data);
+	    (i->item) (a_tcp, &data,  ts, data);
 	    if (cc < a_tcp->client.collect)
 	      whatto |= COLLECT_cc;
 	    if (ccu < a_tcp->client.collect_urg)
@@ -880,7 +896,7 @@
 
       a_tcp->nids_state = NIDS_CLOSE;
       for (i = a_tcp->listeners; i; i = i->next)
-	(i->item) (a_tcp, &i->data);
+	(i->item) (a_tcp, &i->data,  ts, data);
       nids_free_tcp_stream(a_tcp);
       return;
     }
@@ -888,7 +904,7 @@
   if (datalen + (this_tcphdr->th_flags & TH_FIN) > 0)
     tcp_queue(a_tcp, this_tcphdr, snd, rcv,
 	      (char *) (this_tcphdr) + 4 * this_tcphdr->th_off,
-	      datalen, skblen);
+	      datalen, skblen, ts);
   snd->window = ntohs(this_tcphdr->th_win);
   if (rcv->rmem_alloc > 65535)
     prune_queue(rcv, this_tcphdr);
@@ -966,7 +982,7 @@
 
 
 void
-process_icmp(u_char * data)
+process_icmp(u_char * data, struct timeval* ts)
 {
   struct ip *iph = (struct ip *) data;
   struct ip *orig_ip;
@@ -1024,6 +1040,6 @@
     return;
   a_tcp->nids_state = NIDS_RESET;
   for (i = a_tcp->listeners; i; i = i->next)
-    (i->item) (a_tcp, &i->data);
+    (i->item) (a_tcp, &i->data, ts, data);
   nids_free_tcp_stream(a_tcp);
 }
diff -Naur libnids-1.21/src/tcp.h libnids-1.21_patched/src/tcp.h
--- libnids-1.21/src/tcp.h	2006-05-09 13:18:23.000000000 +0200
+++ libnids-1.21_patched/src/tcp.h	2010-03-27 20:20:28.349655979 +0100
@@ -23,8 +23,8 @@
 
 int tcp_init(int);
 void tcp_exit(void);
-void process_tcp(u_char *, int);
-void process_icmp(u_char *);
+void process_tcp(u_char *, int, struct timeval* );
+void process_icmp(u_char *, struct timeval* );
 void tcp_check_timeouts(struct timeval *);
 
 #endif /* _NIDS_TCP_H */
diff -Naur libnids-1.21/src/util.c libnids-1.21_patched/src/util.c
--- libnids-1.21/src/util.c	2006-05-01 18:58:48.000000000 +0200
+++ libnids-1.21_patched/src/util.c	2010-03-27 20:20:28.354167823 +0100
@@ -9,7 +9,7 @@
 
 #include "tcp.h"
 #include "util.h"
-#include "nids.h"
+#include "nids2.h"
 
 void
 nids_no_mem(char *func)
